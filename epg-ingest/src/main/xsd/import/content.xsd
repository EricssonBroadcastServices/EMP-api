<?xml version="1.0" encoding="UTF-8"?>
<!--Document developed by SVT and TV4 2009, 2010, 2011 -->
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns="http://video-metadata.tv4.se/content/v1" xmlns:common="http://video-metadata.tv4.se/common/v1"
	xmlns:tagging="http://video-metadata.tv4.se/tagging/v1" targetNamespace="http://video-metadata.tv4.se/content/v1" version="1.0">
	<xs:import namespace="http://video-metadata.tv4.se/common/v1" schemaLocation="common.xsd" />
	<xs:import namespace="http://video-metadata.tv4.se/tagging/v1" schemaLocation="tagging.xsd" />

	<!-- -->
	<xs:element name="content" type="contentSeasonBrandType">
		<xs:annotation>
			<xs:documentation>Root element for content object</xs:documentation>
		</xs:annotation>
	</xs:element>
	<!-- -->
	<xs:complexType name="contentSeasonBrandType">
		<xs:sequence>
			<xs:element name="brand" type="brandType" minOccurs="0" />
			<xs:element name="season" type="seasonType" minOccurs="0" />
			<xs:element name="content" type="contentType" minOccurs="0" />
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="abstractContentType" abstract="true">
		<xs:annotation>
			<xs:documentation>Abstract type that holds attributes common to brand, season and content</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="id" type="xs:string">
				<xs:annotation>
					<xs:documentation>unique id for asset, unique within each provider
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="studio" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Name of production studio.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="productionYear" minOccurs="0">
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:pattern value="[1-2][0-9][0-9][0-9]" />
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="countryOfOriginList" type="common:countryListType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>list of production countries. Use language codes in IS0 3166-1-alpha-2
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="titleList" type="titleListType">
				<xs:annotation>
					<xs:documentation>Title list for content. At least one occurrence with the language used in the
						market/country displaying the content.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="descriptionList" type="descriptionListType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>List of descriptions
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="commentList" type="commentListType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>List of comments, that is internal descriptions not to show externally.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="tagList" type="tagListType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>list of tags for the content.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="adTagList" type="adTagListType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Ad tags used to mark content for certain advertisement tags.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="creditList" type="creditListType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>list of actors, producers etc. should be consistent within each provider
					</xs:documentation>
				</xs:annotation>
			</xs:element>

			<xs:element name="imageList" type="imageListType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>list of content related images.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="category" type="categoryType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Category path expression</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="parentalRatingList" type="parentalRatingListType" minOccurs="0" />
			<xs:element name="externalReferenceList" type="common:externalReferenceListType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>List of externalReference (of what?)
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="additionalProperties" type="common:propertyListType"></xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="brandType">
		<xs:complexContent>
			<xs:extension base="abstractContentType">
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="seasonType">
		<xs:complexContent>
			<xs:extension base="abstractContentType">
				<xs:sequence>
					<xs:element name="brandId" type="common:idType" minOccurs="0">
						<xs:annotation>
							<xs:documentation>id for season, not unique</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="seasonNumber" type="xs:long" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Season number for the brand.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="numberOfEpisodes" type="xs:long" minOccurs="0">
						<xs:annotation>
							<xs:documentation>If the content belongs to a serie/season, this is the total number of episodes in
								that serie/season.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="contentType">
		<xs:complexContent>
			<xs:extension base="abstractContentType">
				<xs:sequence>
					<xs:element name="sport" type="sportType" minOccurs="0">
						<xs:annotation>
							<xs:documentation>For content describing sport material
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="vmanId" type="xs:string" minOccurs="0">
						<xs:annotation>
							<xs:documentation>VMAN id for asset.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="contentType" type="contentTypeType" />
					<xs:element name="brandId" type="common:idType" minOccurs="0">
						<xs:annotation>
							<xs:documentation>id for season, not unique</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="seasonId" type="common:idType" minOccurs="0">
						<xs:annotation>
							<xs:documentation>id for season, not unique. Only present if content is connected to a season.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="contentIdRef" type="common:idType" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Reference to other content entity that is related. Thought use is for a clip or
								trailer to reference the original content.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="episodeNumber" type="xs:long" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Episode number for the program or "null" if no episode information.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:simpleType name="contentTypeType">
		<xs:restriction base="xs:string">
			<xs:enumeration value="program" />
			<xs:enumeration value="film" />
			<xs:enumeration value="trailer" />
			<xs:enumeration value="clip" />
			<xs:enumeration value="ad" />
			<xs:enumeration value="other" />
		</xs:restriction>
	</xs:simpleType>
	<xs:complexType name="titleListType">
		<xs:sequence>
			<xs:element name="title" type="originalTitleType" maxOccurs="unbounded" />
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="descriptionListType">
		<xs:annotation>
			<xs:documentation>Editorial text that describes the content, can be publically published.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="description" type="descriptionType" minOccurs="0" maxOccurs="unbounded" />
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="commentListType">
		<xs:annotation>
			<xs:documentation>Editorial description that shall not be published, but it can be indexed in a search. Thought
				usage is to write down descriptive intro, manuscript or voice-over
				that applies to the content, Text is not
				required to be written to be ready for public view, but the content will be indexed and possible to use in a
				search.
			</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="comment" type="descriptionType" minOccurs="0" maxOccurs="unbounded" />
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="parentalRatingListType">
		<xs:sequence>
			<xs:element name="parentalRating" type="parentalRatingType" maxOccurs="unbounded" />
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="parentalRatingType">
		<xs:annotation>
			<xs:documentation>
				Parental rating age year. Empty or non existent element => 0 years => No restriction.
				Also see http://en.wikipedia.org/wiki/Motion_picture_rating_system for
				more information.
			</xs:documentation>
		</xs:annotation>
		<xs:simpleContent>
			<xs:extension base="xs:long">
				<xs:attribute name="country" type="xs:string" use="optional">
					<xs:annotation>
						<xs:documentation>Country code in ISO 3166-1-alpha-2.
							No country attribute implies all countries.
							Emplty or absent country attribute has the meaning that it is global, that is
							defualt if no specific country overrides the value for a specific country.
							If country value is repeaded, result is undefined.
						</xs:documentation>
					</xs:annotation>
				</xs:attribute>
			</xs:extension>
		</xs:simpleContent>
	</xs:complexType>
	<xs:complexType name="tagListType">
		<xs:sequence>
			<xs:element name="subjectTag" type="tagging:tagReferenceType" minOccurs="0" maxOccurs="unbounded" />
			<xs:element name="storyTag" type="tagging:tagReferenceType" minOccurs="0" maxOccurs="unbounded" />
			<xs:element name="otherTag" type="tagging:tagReferenceType" minOccurs="0" maxOccurs="unbounded" />
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="adTagListType">
		<xs:sequence>
			<xs:element name="adTag" type="tagging:tagReferenceType" minOccurs="0" maxOccurs="unbounded" />
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="simpleTitleType">
		<xs:simpleContent>
			<xs:restriction base="simpleTextType">
				<xs:maxLength value="100" />
			</xs:restriction>
		</xs:simpleContent>
	</xs:complexType>
	<xs:complexType name="titleType">
		<xs:simpleContent>
			<xs:restriction base="textType">
				<xs:maxLength value="300" />
			</xs:restriction>
		</xs:simpleContent>
	</xs:complexType>
	<xs:complexType name="originalTitleType">
		<xs:simpleContent>
			<xs:extension base="titleType">
				<xs:attribute name="original" type="xs:boolean">
					<xs:annotation>
						<xs:documentation>Marks a title as the original title
						</xs:documentation>
					</xs:annotation>
				</xs:attribute>
			</xs:extension>
		</xs:simpleContent>
	</xs:complexType>
	<xs:complexType name="descriptionType">
		<xs:simpleContent>
			<xs:extension base="descriptionTextType">
				<xs:attribute name="length" type="descriptionLengthType" use="optional">
					<xs:annotation>
						<xs:documentation>
						</xs:documentation>
					</xs:annotation>
				</xs:attribute>
			</xs:extension>
		</xs:simpleContent>
	</xs:complexType>
	<xs:complexType name="descriptionTextType">
		<xs:simpleContent>
			<xs:restriction base="textType">
				<xs:maxLength value="3000" />
			</xs:restriction>
		</xs:simpleContent>
	</xs:complexType>
	<xs:complexType name="textType">
		<xs:simpleContent>
			<xs:extension base="xs:string">
				<xs:attribute name="language" type="xs:language">
					<xs:annotation>
						<xs:documentation>code in ISO 639-1</xs:documentation>
					</xs:annotation>
				</xs:attribute>
			</xs:extension>
		</xs:simpleContent>
	</xs:complexType>
	<xs:simpleType name="descriptionLengthType">
		<xs:annotation>
			<xs:documentation>length (and content) of the description e.g, tiny may be 1-25 characters, short 26-140,medium
				141-240, long 241-999, extended > 1000
			</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="tiny" />
			<xs:enumeration value="short" />
			<xs:enumeration value="medium" />
			<xs:enumeration value="long" />
			<xs:enumeration value="extended" />
		</xs:restriction>
	</xs:simpleType>
	<xs:complexType name="dvbGenreType">
		<xs:sequence>
			<xs:element name="nibble1" type="dvbGenreNibbleType" />
			<xs:element name="nibble2" type="dvbGenreNibbleType" minOccurs="0" />
		</xs:sequence>
	</xs:complexType>
	<xs:simpleType name="dvbGenreNibbleType">
		<xs:restriction base="xs:int">
			<xs:minInclusive value="0" />
			<xs:maxInclusive value="15" />
		</xs:restriction>
	</xs:simpleType>
	<xs:complexType name="creditListType">
		<xs:sequence>
			<xs:element name="credit" type="creditType" minOccurs="0" maxOccurs="unbounded" />
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="creditType">
		<xs:sequence>
			<xs:element name="name" type="xs:string" />
			<xs:element name="rolename" type="xs:string" minOccurs="0" />
			<xs:element name="function" type="xs:string" />
			<xs:element name="externalReferenceList" type="common:externalReferenceListType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>List of externalReference
					</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>

	<xs:complexType name="imageType">
		<xs:sequence>
			<xs:element name="url" type="xs:string" />
			<xs:element name="width" type="xs:int">
				<xs:annotation>
					<xs:documentation>In unit px.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="height">
				<xs:annotation>
					<xs:documentation>In unit px.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="purpose">
				<xs:simpleType>
					<xs:annotation>
						<xs:documentation>Purpose of image, initial intended usage for the image from source system.
						</xs:documentation>
					</xs:annotation>
					<xs:restriction base="xs:string">
						<xs:enumeration value="production" />
						<xs:enumeration value="profile" />
						<xs:enumeration value="banner" />
						<xs:enumeration value="poster" />
						<xs:enumeration value="promo" />
						<xs:enumeration value="press" />
						<xs:enumeration value="logo" />
						<xs:enumeration value="other" />
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="captionList" type="captionListType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="copyRightList" type="copyRightsListType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
					</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
		<xs:attribute name="priority" type="xs:long">
			<xs:annotation>
				<xs:documentation>lower priority number means higher importance
				</xs:documentation>
			</xs:annotation>
		</xs:attribute>
	</xs:complexType>
	<xs:complexType name="imageListType">
		<xs:annotation>
			<xs:documentation>priority attribute on image element indicate "sort order", lower priority number means higher
				importance.
			</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="image" type="imageType" minOccurs="0" maxOccurs="unbounded" />
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="captionListType">
		<xs:sequence>
			<xs:element name="caption" type="common:description" minOccurs="0" maxOccurs="unbounded" />
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="copyRightsListType">
		<xs:sequence>
			<xs:element name="copyRight" type="common:description" minOccurs="0" maxOccurs="unbounded" />
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="mediaReferenceListType">
		<xs:sequence>
			<xs:element name="reference" type="mediaReferenceType" minOccurs="0" maxOccurs="unbounded" />
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="mediaReferenceType">
		<xs:simpleContent>
			<xs:extension base="xs:string">
				<xs:attribute name="priority" type="xs:int">
					<xs:annotation>
						<xs:documentation>lower priority number means higher importance
						</xs:documentation>
					</xs:annotation>
				</xs:attribute>
			</xs:extension>
		</xs:simpleContent>
	</xs:complexType>
	<xs:complexType name="categoryType">
		<xs:annotation>
			<xs:documentation>Category is synonym with Genre. Two leveles of categorisations are supported: main and
				sub-category The primary category is the category with lowest priority
				value in the list.
			</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="mainCategory" type="xs:string" />
			<xs:element name="subCategory" type="xs:string" />
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="sportType">
		<xs:annotation>
			<xs:documentation>Sports tag that describes the sport event: serie, league, tournament or any other sport
				event.
			</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="sportsCategory" type="sportsCategoryType" minOccurs="0" />
			<xs:element name="leagueOrCompetitionList" type="leagueOrCompetitionListType" minOccurs="0" />
			<xs:element name="seasonOrTournamentList" type="seasonOrTournamentList" minOccurs="0" />
			<xs:element name="roundOrEpisodeList" type="roundOrEpisodeListType" minOccurs="0" />
			<xs:element name="homeTeamList" type="teamListType" minOccurs="0" />
			<xs:element name="awayTeamList" type="teamListType" minOccurs="0" />
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="sportsCategoryType">
		<xs:simpleContent>
			<xs:restriction base="simpleTextType">
				<xs:maxLength value="40" />
			</xs:restriction>
		</xs:simpleContent>
	</xs:complexType>
	<xs:complexType name="leagueOrCompetitionListType">
		<xs:sequence>
			<xs:element name="leagueOrCompetition" type="leagueOrCompetitionType" minOccurs="0" maxOccurs="unbounded" />
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="leagueOrCompetitionType">
		<xs:simpleContent>
			<xs:restriction base="simpleTextType">
				<xs:maxLength value="40" />
			</xs:restriction>
		</xs:simpleContent>
	</xs:complexType>
	<xs:complexType name="seasonOrTournamentList">
		<xs:sequence>
			<xs:element name="roundOrEpisode" type="roundOrEpisodeType" minOccurs="0" maxOccurs="unbounded" />
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="seasonOrTournamentType">
		<xs:simpleContent>
			<xs:restriction base="simpleTextType">
				<xs:maxLength value="40" />
			</xs:restriction>
		</xs:simpleContent>
	</xs:complexType>
	<xs:complexType name="roundOrEpisodeListType">
		<xs:sequence>
			<xs:element name="roundOrEpisode" type="roundOrEpisodeType" minOccurs="0" maxOccurs="unbounded" />
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="roundOrEpisodeType">
		<xs:simpleContent>
			<xs:restriction base="simpleTextType">
				<xs:maxLength value="40" />
			</xs:restriction>
		</xs:simpleContent>
	</xs:complexType>
	<xs:complexType name="teamListType">
		<xs:sequence>
			<xs:element name="team" type="teamType" minOccurs="0" maxOccurs="unbounded" />
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="teamType">
		<xs:simpleContent>
			<xs:restriction base="simpleTextType">
				<xs:maxLength value="40" />
			</xs:restriction>
		</xs:simpleContent>
	</xs:complexType>
	<xs:complexType name="simpleTextType">
		<xs:simpleContent>
			<xs:extension base="xs:string">
				<xs:attribute name="language" type="xs:language">
					<xs:annotation>
						<xs:documentation>code in ISO 639-1</xs:documentation>
					</xs:annotation>
				</xs:attribute>
			</xs:extension>
		</xs:simpleContent>
	</xs:complexType>
	<xs:complexType name="brandListType">
		<xs:sequence>
			<xs:element name="brand" type="brandType" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>content for this event, optional. if not set contentIdRef must be set
					</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="seasonListType">
		<xs:sequence>
			<xs:element name="season" type="seasonType" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>content for this event, optional. if not set contentIdRef must be set
					</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="contentListType">
		<xs:sequence>
			<xs:element name="content" type="contentType" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>Content for this event, optional. if not set contentIdRef must be set
					</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
</xs:schema>

<?xml version="1.0" encoding="UTF-8"?>

<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:publish="http://video-metadata.emp.ebsd.ericsson.net/publish-metadata/v1" targetNamespace="http://video-metadata.emp.ebsd.ericsson.net/publish-metadata/v1" elementFormDefault="qualified" attributeFormDefault="unqualified" version="2.0">
	<!-- Message definitions -->
	<xs:element name="publish-metadata">
		<xs:annotation>
			<xs:documentation>Root element for content meta-data message. Message is sent on create or update of a new entity.</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:sequence>
				<xs:element name="data" type="publish:publishType"/>
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<!-- Type Definitions -->
	<!-- Publish -->
	<xs:complexType name="publishType">
		<xs:annotation>
			<xs:documentation>root node of publish</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="series" type="publish:seriesType" minOccurs="0"/>
			<xs:element name="season" type="publish:seasonType" minOccurs="0"/>
			<xs:element name="content" type="publish:contentType" minOccurs="1"/>
			<!-- TODO: Not sure if materials always are available. Is it? -->
			<xs:element name="material" type="publish:materialType" minOccurs="0" maxOccurs="1"/>
			<!-- TODO: No publish without a publication event, or? -->
			<xs:element name="eventList" type="publish:eventListType"/>
		</xs:sequence>
	</xs:complexType>
	<!-- Material -->
	<xs:complexType name="materialRefType">
		<xs:annotation>
			<xs:documentation>Use to refer to a tag, i.e. in content. Lower priority number means higher importance.</xs:documentation>
		</xs:annotation>
		<xs:simpleContent>
			<xs:extension base="xs:string">
				<xs:attribute name="isSyndicated" type="xs:boolean" use="optional"/>
			</xs:extension>
		</xs:simpleContent>
	</xs:complexType>
	<!-- -->
	<xs:complexType name="materialType">
		<xs:sequence>
			<xs:element name="id" type="publish:idType">
				<xs:annotation>
					<xs:documentation>This is used to couple material with an event. This id should be matched from materialIdRef in events. Usually is a version-key from Louise. Not clear yet if it could be anything else than a version-key.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="materialRef" type="publish:materialRefType">
				<xs:annotation>
					<xs:documentation>url string value is an id, uri, url file path or any other reference to the media file. Depends on the context.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="contentIdRef" type="publish:idType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>No use at the moment but could be used for clips or such at a later date. If we would start to send clips from louise or metabank that are not scheduled in louise, we would have material for the clip (videoformat, resolution etc) but we would not have an event to connect the material to. So we need this element to connect the clip (or ad, or something else that does not have a scheduled event) to a content. Say we have highlights from a UFC fight or an Idol episode, we have (at least) two usecases: 1: It is a clip from a recent episode that we want to use to promote watching of the episode on our VOD platform. In this case we could reference the scheduled event instead of the content, however.. 2: If it is an old clip from a publication event that has expired but we want to use it to promote a new season. Then we need to be able to connect it to a content/season/brand instead as we would not have an event to connect it to.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="duration" type="xs:int" minOccurs="0">
				<xs:annotation>
					<xs:documentation>The duration of the material in frames or millisecs.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="framerate" minOccurs="0">
				<xs:annotation>
					<xs:documentation>If applicable, framerate for the material in fps</xs:documentation>
				</xs:annotation>
				<xs:simpleType>
					<xs:restriction base="xs:int"/>
				</xs:simpleType>
			</xs:element>
			<xs:element name="isDRMEnabled" minOccurs="0">
				<xs:annotation>
					<xs:documentation>If false, then this material is not encrypted. This is true by default.</xs:documentation>
				</xs:annotation>
				<xs:simpleType>
					<xs:restriction base="xs:boolean"/>
				</xs:simpleType>
			</xs:element>
			<xs:element name="allowAds" type="xs:boolean" default="true" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Flag to indicate if ads are allowed in this vidoe (in the context of the publication/event)</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="breakList" type="publish:breakListType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>List of breaks for the media</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="subtitleList" type="publish:subtitleListType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>list of available subtitles</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="expiryDate" type="xs:dateTime" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Expiry date for licensing, if no date then default used</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="purgeDate" type="xs:dateTime" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Media would be purged, if no date then default used</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="additionalProperties" type="publish:propertyListType" minOccurs="0"/>
		</xs:sequence>
	</xs:complexType>
	<!-- TODO: Need to add a RFA flag to Subtitles as well? -->
	<xs:complexType name="subtitleListType">
		<xs:sequence>
			<xs:element name="subtitle" type="publish:subtitleType" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>reference to a subtitle item, for example a teletext page or a subtitle file</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="subtitleType">
		<xs:simpleContent>
			<xs:extension base="xs:string">
				<xs:attribute name="language" type="xs:language">
					<xs:annotation>
						<xs:documentation>code in ISO 639-1</xs:documentation>
					</xs:annotation>
				</xs:attribute>
			</xs:extension>
		</xs:simpleContent>
	</xs:complexType>
	<xs:simpleType name="subtitleFormatType">
		<xs:restriction base="xs:string">
			<xs:enumeration value="closed"/>
			<!-- text-tv text -->
			<xs:enumeration value="open"/>
			<xs:enumeration value="openAndTeletext"/>
			<xs:enumeration value="teletext"/>
			<xs:enumeration value="dvbText"/>
			<xs:enumeration value="other"/>
			<xs:enumeration value="N/A"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:complexType name="mediaListType">
		<xs:sequence>
			<xs:element name="media" type="publish:mediaType" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:simpleType name="materialReferenceTypeType">
		<xs:restriction base="xs:string">
			<xs:enumeration value="video"/>
			<xs:enumeration value="audio"/>
			<xs:enumeration value="subtitle"/>
			<xs:enumeration value="graphics"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:complexType name="mediaType">
		<xs:sequence>
			<xs:element name="subtitleList" type="publish:subtitleListType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>list of available subtitles</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="rfa" type="xs:boolean">
				<xs:annotation>
					<xs:documentation>"Ready For Airing": This flag will be set to true if the media has been checked by QC (Quality Control). If this flag is not set to true it means that the file is not yet availble.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="materialRightsListType">
		<xs:sequence>
			<xs:element name="rights" type="publish:materialRightsType" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="materialRightsType">
		<xs:annotation>
			<xs:documentation>DateTime in UTC</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="validFrom" type="xs:dateTime">
				<xs:annotation>
					<xs:documentation>Start of period where right is valid</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="validTo" type="xs:dateTime">
				<xs:annotation>
					<xs:documentation>End of period where right is valid</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="materialListType">
		<xs:annotation>
			<xs:documentation>This is used for better readability in higher nodes. I.e instead of having a sequence of materialTypes in the publishType, just add an element with this type.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="material" type="publish:materialType" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="breakListType">
		<xs:sequence>
			<xs:element name="break" type="publish:breakType" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="breakType">
		<xs:sequence>
			<xs:annotation>
				<xs:documentation>Use the same unit in offset as in duration</xs:documentation>
			</xs:annotation>
			<xs:element name="offset" type="xs:long" minOccurs="1"/>
		</xs:sequence>
	</xs:complexType>
	<!-- Common -->
	<xs:simpleType name="idType">
		<xs:annotation>
			<xs:documentation>A general ID type for entities</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:pattern value="[0-9a-zA-Z\-_]+"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="nidType">
		<xs:annotation>
			<xs:documentation>Unique name id, i.e. the normalized textual representation, e.g.: no space, lower case, no diacritic characters. Language attribute can be used to specify a localized name for the tag.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:pattern value="[0-9a-z\-_]+"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="tagType">
		<xs:annotation>
			<xs:documentation>Unique name id, i.e. the normalized textual representation, e.g.: no space, lower case, no diacritic characters. Language attribute can be used to specify a localized name for the tag.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:pattern value="[0-9a-zA-Z\-_ ]+"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:complexType name="externalReferenceListType">
		<xs:sequence>
			<xs:element name="externalReference" type="publish:externalReferenceType" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>List of external resources that can used to connect/boost the content data with.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="externalReferenceType">
		<xs:sequence>
			<xs:element name="provider" type="xs:string" minOccurs="1" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Who is the provides for the extend data that can be used for this content. It can for example be score24.com or IMDB.com</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="id" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Data identifier to map this content to in the external provider/partners data</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="uri" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Resource to use for reach the data at the provider</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="tagReferenceType">
		<xs:annotation>
			<xs:documentation>Use to refer to a tag, i.e. in content. Lower priority number means higher importance.</xs:documentation>
		</xs:annotation>
		<xs:simpleContent>
			<xs:extension base="xs:string">
				<xs:attribute name="type" type="publish:nidType" use="required"/>
			</xs:extension>
		</xs:simpleContent>
	</xs:complexType>
	<xs:complexType name="description">
		<xs:annotation>
			<xs:documentation>A general type for describing something, attribute indicating the language.</xs:documentation>
		</xs:annotation>
		<xs:simpleContent>
			<xs:extension base="xs:string">
				<xs:attribute name="language" type="xs:language">
					<xs:annotation>
						<xs:documentation>code in ISO 639-1 Note that the language here refers to the language on which the description is made.</xs:documentation>
					</xs:annotation>
				</xs:attribute>
			</xs:extension>
		</xs:simpleContent>
	</xs:complexType>
	<xs:complexType name="publicationRightsType">
		<xs:annotation>
			<xs:documentation>publication rights type</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="productList" type="publish:productListType"/>
			<xs:element name="serviceList" type="publish:serviceListType" minOccurs="0"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="drmRestrictionsType">
		<xs:annotation>
			<xs:documentation>DRM Restrictions.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<!--  false by default  -->
			<xs:element name="studioContractID" type="xs:string" minOccurs="0"/>
			<!--  false by default  -->
			<xs:element name="downloadAllowed" type="xs:boolean" minOccurs="0"/>
			<!--  false by default  -->
			<xs:element name="mirroringAllowed" type="xs:boolean" minOccurs="0"/>
			<!--  false by default  -->
			<xs:element name="HDAllowed" type="xs:boolean" minOccurs="0"/>
			<!--  false by default  -->
			<xs:element name="HDMIAllowed" type="xs:boolean" minOccurs="0"/>
			<!-- Max bit Rate in kbps -->
			<xs:element name="MaxBitRate" type="xs:long" minOccurs="0"/>
			<xs:element name="includeCountries" type="publish:countryListType" minOccurs="1"/>
			<xs:element name="deviceList" type="publish:deviceListType" minOccurs="0"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="countryListType">
		<xs:sequence>
			<xs:element name="country" type="xs:string" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>code in ISO 3166-1-alpha-2</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="deviceListType">
		<xs:sequence>
			<xs:element name="device" type="publish:deviceType" minOccurs="1" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>Name of the device</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="deviceType">
		<xs:sequence>
			<xs:element name="deviceType" type="publish:deviceTypeType" minOccurs="1"/>
			<xs:element name="vendor" type="xs:string" minOccurs="0"/>
			<xs:element name="os" type="xs:string" minOccurs="0"/>
			<xs:element name="osVersion" type="xs:string" minOccurs="0"/>
			<xs:element name="model" type="xs:string" minOccurs="0"/>
		</xs:sequence>
	</xs:complexType>
	<xs:simpleType name="deviceTypeType">
		<xs:annotation>
			<xs:documentation>Controls the device type</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="Web"/>
			<xs:enumeration value="Mobile"/>
			<xs:enumeration value="Tablet"/>
			<xs:enumeration value="MediaPlayer"/>
			<xs:enumeration value="SmartTV"/>
			<xs:enumeration value="Console"/>
			<xs:enumeration value="STB"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:complexType name="productListType">
		<xs:sequence>
			<xs:element name="product" type="xs:string" minOccurs="1" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>Name of the product</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="serviceListType">
		<xs:sequence>
			<xs:element name="service" type="xs:string" minOccurs="1" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>Name of the platform</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<!-- -->
	<xs:complexType name="propertyListType">
		<xs:sequence>
			<xs:element name="property" type="publish:propertyType" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="propertyType">
		<xs:annotation>
			<xs:documentation>A multi value property</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="name" type="xs:Name"/>
			<xs:element name="type" type="publish:propertyTypeType"/>
			<xs:element name="value" type="xs:string" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:simpleType name="propertyTypeType">
		<xs:annotation>
			<xs:documentation>Definition of the typ of the property value content</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="string"/>
			<xs:enumeration value="integer"/>
			<xs:enumeration value="decimal"/>
			<xs:enumeration value="url"/>
		</xs:restriction>
	</xs:simpleType>
	<!-- Content -->
	<xs:complexType name="contentSeasonSeriesType">
		<xs:sequence>
			<xs:element name="series" type="publish:seriesType" minOccurs="0"/>
			<xs:element name="season" type="publish:seasonType" minOccurs="0"/>
			<xs:element name="content" type="publish:contentType" minOccurs="0"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="abstractContentType" abstract="true">
		<xs:annotation>
			<xs:documentation>Abstract type that holds attributes common to series, season and content</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="id" type="publish:idType">
				<xs:annotation>
					<xs:documentation>unique id for asset, unique within each provider</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="studio" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Name of production studio.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="productionYear" minOccurs="0">
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:pattern value="[1-2][0-9][0-9][0-9]"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="countryOfOriginList" type="publish:countryListType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>list of production countries. Use country codes in IS0 3166-1-alpha-2</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="titleList" type="publish:titleListType">
				<xs:annotation>
					<xs:documentation>Title list for content. At least one occurrence with the language used in the market/country displaying the content.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="descriptionList" type="publish:descriptionListType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>List of descriptions</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="tagList" type="publish:tagListType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>list of tags for the content.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="creditList" type="publish:creditListType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>list of actors, producers etc. should be consistent within each provider</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="imageList" type="publish:imageListType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>list of content related images.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="parentalRatingList" type="publish:parentalRatingListType" minOccurs="0"/>
			<xs:element name="externalReferenceList" type="publish:externalReferenceListType" minOccurs="0"/>
			<xs:element name="additionalProperties" type="publish:propertyListType" minOccurs="0"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="seriesType">
		<xs:complexContent>
			<xs:extension base="publish:abstractContentType"/>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="seasonType">
		<xs:complexContent>
			<xs:extension base="publish:abstractContentType">
				<xs:sequence>
					<xs:element name="seriesId" type="publish:idType" minOccurs="0">
						<xs:annotation>
							<xs:documentation>id for season, not unique</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="seasonNumber" type="xs:long" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Season number for the series.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="numberOfEpisodes" type="xs:long" minOccurs="0">
						<xs:annotation>
							<xs:documentation>If the content belongs to a series/season, this is the total number of episodes in that series/season.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="contentType">
		<xs:complexContent>
			<xs:extension base="publish:abstractContentType">
				<xs:sequence>
					<xs:element name="contentType" type="publish:contentTypeType" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Type of the content</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="seriesId" type="publish:idType" minOccurs="0">
						<xs:annotation>
							<xs:documentation>id for season, not unique</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="seasonId" type="publish:idType" minOccurs="0">
						<xs:annotation>
							<xs:documentation>id for season, not unique. Only present if content is connected to a season.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="contentIdRef" type="publish:idType" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Reference to other content entity that is related. Use is for a trailer to reference the original content.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="episodeNumber" type="xs:long" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Episode number for the program or "null" if no episode information.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:simpleType name="contentTypeType">
		<xs:restriction base="xs:string">
			<xs:enumeration value="program"/>
			<xs:enumeration value="movie"/>
			<xs:enumeration value="trailer"/>
			<xs:enumeration value="ad"/>
			<xs:enumeration value="other"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:complexType name="titleListType">
		<xs:sequence>
			<xs:element name="title" type="publish:titleType" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="descriptionListType">
		<xs:annotation>
			<xs:documentation>Editorial text that describes the content, can be publically published.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="description" type="publish:descriptionType" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="commentListType">
		<xs:annotation>
			<xs:documentation>Editorial description that shall not be published, but it can be indexed in a search. Thought usage is to write down descriptive intro, manuscript or voice-over that applies to the content, Text is not required to be written to be ready for public view, but the content will be indexed and possible to use in a search.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="comment" type="publish:descriptionType" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="parentalRatingListType">
		<xs:sequence>
			<xs:element name="parentalRating" type="publish:parentalRatingType" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="parentalRatingType">
		<xs:annotation>
			<xs:documentation>See http://en.wikipedia.org/wiki/Motion_picture_rating_system for more information about parental ratings.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="rating" type="xs:string" minOccurs="1">
				<xs:annotation>
					<xs:documentation>Parental rating age in year. 0 years => No restriction. Also see http://en.wikipedia.org/wiki/Motion_picture_rating_system for more information.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="scheme" type="xs:string" minOccurs="1">
				<xs:annotation>
					<xs:documentation>Rating code that motivates the parental guidance. Code to descriptive text is mapped in client GUI.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="country" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Two char country code accoring to ISO 3166-1-alpha-2. Empty or absent country attribute has the meaning that it is global default value for any country. Specific country declaration overrides the default. If country value is repeted, result is undefined which one to select.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="tagListType">
		<xs:sequence>
			<xs:element name="tag" type="publish:tagReferenceType" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="simpleTitleType">
		<xs:simpleContent>
			<xs:restriction base="publish:simpleTextType">
				<xs:maxLength value="100"/>
			</xs:restriction>
		</xs:simpleContent>
	</xs:complexType>
	<xs:complexType name="titleType">
		<xs:simpleContent>
			<xs:extension base="publish:untypedTitleType"/>
		</xs:simpleContent>
	</xs:complexType>
	<xs:complexType name="untypedTitleType">
		<xs:simpleContent>
			<xs:restriction base="publish:localizedTextType">
				<xs:maxLength value="300"/>
			</xs:restriction>
		</xs:simpleContent>
	</xs:complexType>
	<xs:complexType name="descriptionType">
		<xs:simpleContent>
			<xs:extension base="publish:untypedDescriptionType">
				<xs:attribute name="length" type="publish:descriptionLengthType" use="optional">
					<xs:annotation>
						<xs:documentation/>
					</xs:annotation>
				</xs:attribute>
			</xs:extension>
		</xs:simpleContent>
	</xs:complexType>
	<xs:simpleType name="descriptionLengthType">
		<xs:annotation>
			<xs:documentation>length (and content) of the description e.g, tiny may be 1-25 characters, short 26-140,medium 141-240, long 241-999, extended > 1000</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="short"/>
			<xs:enumeration value="medium"/>
			<xs:enumeration value="long"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:complexType name="untypedDescriptionType">
		<xs:simpleContent>
			<xs:restriction base="publish:localizedTextType">
				<xs:maxLength value="3000"/>
			</xs:restriction>
		</xs:simpleContent>
	</xs:complexType>
	<xs:complexType name="localizedTextType">
		<xs:annotation>
			<xs:documentation>Localized text element with language attribute.</xs:documentation>
		</xs:annotation>
		<xs:simpleContent>
			<xs:extension base="xs:string">
				<xs:attribute name="language" type="xs:language">
					<xs:annotation>
						<xs:documentation>code in ISO 639-1</xs:documentation>
					</xs:annotation>
				</xs:attribute>
			</xs:extension>
		</xs:simpleContent>
	</xs:complexType>
	<xs:complexType name="creditListType">
		<xs:sequence>
			<xs:element name="credit" type="publish:creditType" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="creditType">
		<xs:sequence>
			<xs:element name="name" type="xs:string"/>
			<xs:element name="rolename" type="xs:string" minOccurs="0"/>
			<xs:element name="function" type="xs:string"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="imageType">
		<xs:sequence>
			<xs:element name="id" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>The id of the image from the origin system. For example it might be img_123.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="url" type="xs:string"/>
			<xs:element name="width" type="xs:int">
				<xs:annotation>
					<xs:documentation>In unit px.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="height" type="xs:int">
				<xs:annotation>
					<xs:documentation>In unit px.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="purpose">
				<xs:simpleType>
					<xs:annotation>
						<xs:documentation>Purpose of image, initial intended usage for the image from source system.</xs:documentation>
					</xs:annotation>
					<xs:restriction base="xs:string">
						<xs:enumeration value="banner"/>
						<xs:enumeration value="poster"/>
						<xs:enumeration value="logo"/>
						<xs:enumeration value="other"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="orientation" minOccurs="0">
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:enumeration value="landscape"/>
						<xs:enumeration value="portrait"/>
						<xs:enumeration value="other"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="copyRightList" type="publish:copyRightsListType" minOccurs="0">
				<xs:annotation>
					<xs:documentation/>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
		<xs:attribute name="priority" type="xs:long">
			<xs:annotation>
				<xs:documentation>lower priority number means higher importance</xs:documentation>
			</xs:annotation>
		</xs:attribute>
	</xs:complexType>
	<xs:complexType name="imageListType">
		<xs:annotation>
			<xs:documentation>priority attribute on image element indicate "sort order", lower priority number means higher importance.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="image" type="publish:imageType" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="captionListType">
		<xs:sequence>
			<xs:element name="caption" type="publish:description" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="copyRightsListType">
		<xs:sequence>
			<!--
			<xs:element name="copyRight" type="publish:description" minOccurs="0" maxOccurs="unbounded" />
-->
			<!--
				Use string instead of common:description since common:description
				requires language to be set. In most cases we don't have language
				in the input...
			 -->
			<xs:element name="copyRight" type="xs:string" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="mediaReferenceListType">
		<xs:sequence>
			<xs:element name="reference" type="publish:mediaReferenceType" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="mediaReferenceType">
		<xs:simpleContent>
			<xs:extension base="xs:string">
				<xs:attribute name="priority" type="xs:int">
					<xs:annotation>
						<xs:documentation>lower priority number means higher importance</xs:documentation>
					</xs:annotation>
				</xs:attribute>
			</xs:extension>
		</xs:simpleContent>
	</xs:complexType>
	<xs:complexType name="simpleTextType">
		<xs:simpleContent>
			<xs:extension base="xs:string">
				<xs:attribute name="language" type="xs:language">
					<xs:annotation>
						<xs:documentation>code in ISO 639-1</xs:documentation>
					</xs:annotation>
				</xs:attribute>
			</xs:extension>
		</xs:simpleContent>
	</xs:complexType>
	<xs:complexType name="seriesListType">
		<xs:sequence>
			<xs:element name="series" type="publish:seriesType" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>content for this event, optional. if not set contentIdRef must be set</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="seasonListType">
		<xs:sequence>
			<xs:element name="season" type="publish:seasonType" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>content for this event, optional. if not set contentIdRef must be set</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="contentListType">
		<xs:sequence>
			<xs:element name="content" type="publish:contentType" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>Content for this event, optional. if not set contentIdRef must be set</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<!-- event -->
	<xs:complexType name="eventType">
		<xs:annotation>
			<xs:documentation/>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="id" type="publish:idType">
				<xs:annotation>
					<xs:documentation>Per provider unique id for the event.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="contentIdRef" type="xs:string">
				<xs:annotation>
					<xs:documentation>Reference to contentId. I.E the content that is to be shown in this event.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="startTime" type="xs:dateTime">
				<xs:annotation>
					<xs:documentation>Time when Vod is possible to start play.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="endTime" type="xs:dateTime">
				<xs:annotation>
					<xs:documentation>Time when Vod is no longer possible to play.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="publishTime" type="xs:dateTime" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Time when the vod information can be exposed to the customer. Vod can not be played until startTime. If publish is after start or empty (nil), then publishTime = startTime.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="publicationRights" type="publish:publicationRightsType" minOccurs="0"/>
			<xs:element name="drmRestrictions" type="publish:drmRestrictionsType" minOccurs="0"/>
			<xs:element name="additionalProperties" type="publish:propertyListType" minOccurs="0"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="eventListType">
		<xs:annotation>
			<xs:documentation>This is used for better readability in higher nodes. I.e instead of having a sequence of eventTypes in the publishType, just add an element with this type.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="event" type="publish:eventType" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
</xs:schema>
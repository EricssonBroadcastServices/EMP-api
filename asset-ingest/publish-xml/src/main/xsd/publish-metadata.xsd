<?xml version="1.0" encoding="UTF-8"?>
<xs:schema elementFormDefault="qualified"
           targetNamespace="http://video-metadata.emp.ebsd.ericsson.net/publish-metadata/v1" version="@@version@@"
           xmlns:publish="http://video-metadata.emp.ebsd.ericsson.net/publish-metadata/v1"
           xmlns:jaxb="http://java.sun.com/xml/ns/jaxb"
           jaxb:version="2.1"
           xmlns:xs="http://www.w3.org/2001/XMLSchema">
    <!-- Message definitions -->
    <xs:element name="publish-metadata">
        <xs:annotation>
            <xs:documentation>Root element for the content metadata message. A
                publish-metadata message is sent to create or update an entity.
                Deletion/removal of an entity is not currently supported
            </xs:documentation>
        </xs:annotation>
        <xs:complexType>
            <xs:sequence>
                <xs:element name="data" type="publish:publishType"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>
    <!-- Type Definitions -->
    <!-- Publish -->
    <xs:complexType name="publishType">
        <xs:annotation>
            <xs:documentation>The root node of a publish-metadata. It can contain
                details of any entity that the Ericsson Managed Player supports.
            </xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:element minOccurs="0" name="series" type="publish:seriesType"/>
            <xs:element minOccurs="0" name="season" type="publish:seasonType"/>
            <xs:element maxOccurs="50" minOccurs="0" name="tag" type="publish:tagType"/>
            <xs:element minOccurs="0" name="asset" type="publish:assetType"/>
            <xs:element minOccurs="0" name="material" type="publish:materialType"/>
            <xs:element minOccurs="0" name="publicationList" type="publish:publicationListType"/>
            <xs:element minOccurs="0" name="contract" type="publish:contractType"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="customDataType">
        <xs:sequence>
            <xs:element name="object" type="publish:objectType"/>
        </xs:sequence>
    </xs:complexType>
    <!--  Empty tag  -->
    <xs:complexType name="emptyTagType"/>
    <!-- Array of boolean -->
    <xs:complexType name="booleanArrayType">
        <xs:choice maxOccurs="unbounded">
            <xs:element name="true" type="publish:emptyTagType"/>
            <xs:element name="false" type="publish:emptyTagType"/>
        </xs:choice>
    </xs:complexType>
    <!-- Array of strings -->
    <xs:complexType name="stringArrayType">
        <xs:sequence>
            <xs:element maxOccurs="unbounded" name="string" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>
    <!-- Array of numbers -->
    <xs:complexType name="numberArrayType">
        <xs:sequence>
            <xs:element maxOccurs="unbounded" name="number" type="xs:decimal"/>
        </xs:sequence>
    </xs:complexType>
    <!-- Array of complex types-->
    <xs:complexType name="objectArrayType">
        <xs:sequence>
            <xs:element maxOccurs="unbounded" name="object" type="publish:objectType"/>
        </xs:sequence>
    </xs:complexType>
    <!-- Arrays of arrays not supported since elasticSearch doesn't really handle them in any good way -->
    <!-- Object -->
    <xs:complexType name="objectType">
        <xs:sequence>
            <xs:element maxOccurs="unbounded" name="mapEntry" type="publish:MapEntryType"/>
        </xs:sequence>
    </xs:complexType>
    <!-- Map entry -->
    <xs:complexType name="MapEntryType">
        <xs:choice maxOccurs="unbounded">
            <xs:element name="stringArray" type="publish:stringArrayType"/>
            <xs:element name="numberArray" type="publish:numberArrayType"/>
            <xs:element name="booleanArray" type="publish:booleanArrayType"/>
            <xs:element name="objectArray" type="publish:objectArrayType"/>
            <xs:element name="object" type="publish:objectType"/>
            <xs:element name="string" type="xs:string"/>
            <xs:element name="number" type="xs:decimal"/>
            <xs:element name="null" type="publish:emptyTagType"/>
            <xs:element name="true" type="publish:emptyTagType"/>
            <xs:element name="false" type="publish:emptyTagType"/>
        </xs:choice>
        <xs:attribute name="name" type="xs:string"/>
    </xs:complexType>
    <!-- Material -->
    <xs:complexType name="VodSegmentType">
        <xs:sequence>
            <xs:element name="sourceAssetId" type="publish:idType"/>
            <xs:element name="sourceMaterialId" minOccurs="0" type="publish:idType"/>
            <xs:element name="start" type="xs:duration">
                <xs:annotation>
                    <xs:documentation>
                        The duration from the beginning of the source video where the clip starts.
                        Depending on clipping type the actual resolution used might be on the order of seconds or
                        milliseconds.
                        Any precision more accurate then frames will be rounded to nearest frame even with the most
                        exact
                        clipping type.
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="end" type="xs:duration">
                <xs:annotation>
                    <xs:documentation>
                        The duration from the start of the source video where the clip ends.
                        Depending on clipping type the actual resolution used might be on the order of seconds or
                        milliseconds.
                        Any precision more accurate then frames will be rounded to nearest frame even with the most
                        exact
                        clipping type.
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="LiveSegmentType">
        <xs:sequence>
            <xs:element name="channelId" type="publish:idType" minOccurs="0"/>
            <xs:element name="start" type="xs:dateTime"/>
            <xs:element name="end" type="xs:dateTime"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="VodSegmentListType">
        <xs:sequence>
            <xs:element maxOccurs="unbounded" name="segment" type="publish:VodSegmentType"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="LiveSegmentListType">
        <xs:sequence>
            <xs:element maxOccurs="unbounded" name="segment" type="publish:LiveSegmentType"/>
        </xs:sequence>
    </xs:complexType>
    <xs:simpleType name="LiveSourceTypeType">
        <xs:restriction base="xs:string">
            <xs:enumeration value="EPG"/>
            <xs:enumeration value="EDIT_LIST"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:complexType name="VideoTrackType">
        <xs:sequence>
            <xs:element name="filename" type="publish:notNullString">
                <xs:annotation>
                    <xs:documentation>The filename of this track in the source</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="outputFilename" minOccurs="0" type="publish:notNullString">
                <xs:annotation>
                    <xs:documentation>The filename of this track at the destination.
                        If nothing is specified we'll re-use tha name of the source
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="targetBitrate" type="xs:long">
                <xs:annotation>
                    <xs:documentation>The "conceptual" bitrate of this track</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="codec" type="xs:string" minOccurs="0">
                <xs:annotation>
                    <xs:documentation>H264 or H265</xs:documentation>
                </xs:annotation>
            </xs:element>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="VideoTrackListType">
        <xs:sequence>
            <xs:element maxOccurs="unbounded" name="videoTrack" type="publish:VideoTrackType"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="AudioTrackType">
        <xs:sequence>
            <xs:element name="filename" type="publish:notNullString">
                <xs:annotation>
                    <xs:documentation>The filename of this track in the source</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="outputFilename" minOccurs="0" type="publish:notNullString">
                <xs:annotation>
                    <xs:documentation>The filename of this track at the destination.
                        If nothing is specified we'll re-use tha name of the source
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="targetBitrate" type="xs:long">
                <xs:annotation>
                    <xs:documentation>The "conceptual" bitrate of this track</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="displayName" type="publish:notNullString">
                <xs:annotation>
                    <xs:documentation>The name that should be shown in drop-downs in the player.
                        If none is given the 2-letter language code will be used instead
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="language" type="publish:language"/>
            <xs:element name="codec" type="xs:string" minOccurs="0">
                <xs:annotation>
                    <xs:documentation>AAC or AC3
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="channels" type="xs:int" default="2">
                <xs:annotation>
                    <xs:documentation>At this point only the integers 2 and 6 are supported and they will be interpreted
                        as stereo or 5.1
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="trackId" type="xs:int" minOccurs="0">
                <xs:annotation>
                    <xs:documentation>If the source contains multiple tracks you need to specify which track to use
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
        </xs:sequence>
        <xs:attribute name="audioDescription" type="xs:boolean" default="false">
            <xs:annotation>
                <xs:documentation>
                    Indicates if this track is a audio description track or not
                </xs:documentation>
            </xs:annotation>
        </xs:attribute>
    </xs:complexType>
    <xs:complexType name="AudioTrackListType">
        <xs:sequence>
            <xs:element maxOccurs="unbounded" name="audioTrack" type="publish:AudioTrackType"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="SubtitleTrackType">
        <xs:sequence>
            <xs:element name="filename" type="publish:notNullString">
                <xs:annotation>
                    <xs:documentation>The filename of this track in the source</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="outputFilename" minOccurs="0" type="publish:notNullString">
                <xs:annotation>
                    <xs:documentation>The filename of this track at the destination</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="displayName" type="publish:notNullString">
                <xs:annotation>
                    <xs:documentation>The name that should be shown in drop-downs in the player.
                        If none is given the 2-letter language code will be used instead
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="language" type="publish:language"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="SubtitleTrackListType">
        <xs:sequence>
            <xs:element maxOccurs="unbounded" name="subtitleTrack" type="publish:SubtitleTrackType"/>
        </xs:sequence>
    </xs:complexType>
    <xs:simpleType name="ExternalEncodingSourceTypeType">
        <xs:annotation>
            <xs:documentation>Supported source types</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
            <xs:enumeration value="URL">
                <xs:annotation>
                    <xs:documentation>
                        The source should be a URL with basic auth credentials or SAS tokens included and appending the
                        filename
                        to the source should give a valid and accessible URL
                    </xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="LOCAL_FOLDER"/>
            <xs:enumeration value="STORAGE"/>
            <xs:enumeration value="ARCHIVE">
                <xs:annotation>
                    <xs:documentation>
                        The source should be a URL pointing to a archive file of some sort (tar, zip, etc.).
                    </xs:documentation>
                </xs:annotation>
            </xs:enumeration>
        </xs:restriction>
    </xs:simpleType>
    <xs:complexType name="ExternalEncodingSourceType">
        <xs:simpleContent>
            <xs:extension base="publish:notNullString">
                <xs:annotation>
                    <xs:documentation>
                        Where are the actual files located. Should either be a URL to a archive (tar or zip) or a
                        "folder" (Azure
                        blob storage, UNC path or a partial HTTP-URL that can be appended by the track-names to get a
                        valid URL).
                    </xs:documentation>
                </xs:annotation>
                <xs:attribute name="type" type="publish:ExternalEncodingSourceTypeType" default="STORAGE">
                    <xs:annotation>
                        <xs:documentation>What type of source is this</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="removeAfterIngest" type="xs:boolean" default="false">
                    <xs:annotation>
                        <xs:documentation>
                            Deprecated: this attribute will have no effect.
                            Use removeAfterIngest attribute on materialType instead.
                        </xs:documentation>
                    </xs:annotation>
                </xs:attribute>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>
    <xs:complexType name="ExternalEncodingType">
        <xs:annotation>
            <xs:documentation>
                Should be used when ingesting media that is prepared outside of MOTT.
                At the moment we only support unencrypted and demuxed fMP4 or MP4 files.
            </xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:element name="source" type="publish:ExternalEncodingSourceType"/>
            <xs:element name="videoTracks" minOccurs="0" type="publish:VideoTrackListType">
                <xs:annotation>
                    <xs:documentation>
                        A list of which of the files at the destination that are video tracks.
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="audioTracks" minOccurs="0" type="publish:AudioTrackListType">
                <xs:annotation>
                    <xs:documentation>
                        A list of which of the files at the destination that are audio tracks.
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="subtitleTracks" minOccurs="0" type="publish:SubtitleTrackListType">
                <xs:annotation>
                    <xs:documentation>
                        A list of which of the files at the destination that are subtitle tracks.
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="sprites" minOccurs="0" type="publish:SpriteListType"></xs:element>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="VodSourceType">
        <xs:sequence>
            <xs:element name="segments" type="publish:VodSegmentListType"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="LiveSourceType">
        <xs:sequence>
            <xs:element name="type" type="publish:LiveSourceTypeType"/>
            <xs:element minOccurs="0" name="channelId" type="publish:idType"/>
            <xs:element minOccurs="0" name="programId" type="publish:idType"/>
            <xs:element minOccurs="0" name="segments" type="publish:LiveSegmentListType"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="materialRefType" mixed="true">
        <xs:annotation>
            <xs:documentation>A reference to an external media file. This can be
                an ID, a URI a URL or any other String value.
            </xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:element type="publish:audioListType" name="audioList" minOccurs="0"/>
        </xs:sequence>
        <xs:attribute name="syndicated" type="xs:boolean"/>
        <xs:attribute name="syndicatedProvider" type="publish:notNullString"/>
    </xs:complexType>
    <xs:complexType name="variantsType">
        <xs:sequence>
            <xs:element type="publish:variantType" name="variant" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="variantType">
        <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="1" name="id" type="publish:idType"/>
            <xs:element type="publish:profileListType" name="profiles" minOccurs="1" maxOccurs="1"/>
            <xs:element type="publish:variantTrackType" name="subtitles" minOccurs="0" maxOccurs="1"/>
            <xs:element type="publish:variantTrackType" name="audios" minOccurs="0" maxOccurs="1"/>
            <xs:element type="publish:variantTrackType" name="videos" minOccurs="0" maxOccurs="1"/>
            <xs:element type="xs:int" name="maxBitrate" minOccurs="0" maxOccurs="1"/>
        </xs:sequence>
        <xs:attribute name="delete" default="false" type="xs:boolean"/>
    </xs:complexType>
    <xs:complexType name="variantAudioType">
        <xs:sequence>
            <xs:element type="publish:languageListType" name="languageList" minOccurs="0"/>
        </xs:sequence>
        <xs:attribute name="all" type="xs:boolean"/>
    </xs:complexType>
    <xs:complexType name="variantVideoType">
        <xs:sequence>
            <xs:element type="xs:long" name="maxBitRate" minOccurs="0"/>
        </xs:sequence>
        <xs:attribute name="all" type="xs:boolean"/>
    </xs:complexType>
    <xs:complexType name="variantTrackType">
        <xs:sequence>
            <xs:element type="xs:string" name="track" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
        <xs:attribute name="all" type="xs:boolean"/>
        <xs:attribute name="included" type="xs:boolean" default="true"/>
    </xs:complexType>
    <xs:complexType name="languageListType">
        <xs:sequence>
            <xs:element type="publish:language" name="language" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="audioSpecificationType" abstract="true">
        <xs:annotation>
            <xs:documentation>
                Specifies the number of audio tracks and their respective use and language.

                If no audio tracks are specified we try to analyze the file and detect languages etc. of the
                existing audio tracks from the metadata
                If we can't analyze the file and no audio channels are specified we assume stereo sound in the order
                LR or a single stereo track depending on the file format
                If more audio tracks are specified then there are audio tracks in the actual file the ingest request
                might return 200 OK but the ingest might still fail or produce unpredictable results
            </xs:documentation>
        </xs:annotation>
        <xs:attribute name="language" type="publish:language"/>
        <xs:attribute name="displayName" type="publish:notNullString">
            <xs:annotation>
                <xs:documentation>
                    ny string. It will be used in the "audio track picker" in the player. If no displayName is
                    given the displayName of the language in our system will be used which might be the english name for
                    the language or a localised version depending on language.
                </xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute name="channels" type="publish:notNullString">
            <xs:annotation>
                <xs:documentation>
                    A number of integers or integers followed by a 's' separated by a '-' indicating the number
                    of mono tracks in this group of tracks. If the integer is followed by a 's' that number of tracks
                    will be skipped in the source file.
                </xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute name="channelDisplayNames" type="publish:notNullString">
            <xs:annotation>
                <xs:documentation>
                    Any strings (including the empty string) not containing a '-' separated by a '-'. They will
                    be postfixed to the displayName in the yielding the final string shown to end users in the "audio
                    track picker" in the player. If not given we will use the empty string to indicate stereo and for
                    other track numbers an attempt to figure out something sensible like "5.1" or "7.1" will be made
                    with no guarantees that it will succeed. If we fail to figure out a good channelDisplayName for a
                    given integer the empty string will be used. The number of groups in the order attribute MUST
                    correspond to the number of groups in the channels attribute that don't contain a 's'.
                </xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute name="order" type="publish:notNullString">
            <xs:annotation>
                <xs:documentation>
                    Any strings separated by a '-' made by concatenating strings from the following set
                    {L,R,C,Ls,Rs,Lss,Rss,Lrs,Rrs,LFE} indicating which order the mono tracks appear in the source file.
                    The number of groups in the order attribute MUST correspond to the number of groups in the
                    channels attribute that don't contain a 's'.
                </xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute name="audioDescription" type="xs:boolean" default="false">
            <xs:annotation>
                <xs:documentation>
                    Indicates if this track is a audio description track or not
                </xs:documentation>
            </xs:annotation>
        </xs:attribute>
    </xs:complexType>
    <xs:complexType name="audioType">
        <xs:annotation>
            <xs:documentation>
                If no language is given we assume the audio track in the source is the same
                as the default language for the OU if we aren't able to analyze the file
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:restriction base="publish:audioSpecificationType"/>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="audioListType">
        <xs:annotation>
            <xs:documentation>
                If this element is missing we assume the audio track in the source is the same
                as the default language for the OU if we aren't able to analyze the file
            </xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:element maxOccurs="unbounded" name="audio" type="publish:audioType"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="dubType">
        <xs:annotation>
            <xs:documentation>
                If no language is given we assume the audio track in the source is the same
                as the default language for the OU if we aren't able to analyze the file
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:annotation>
                <xs:documentation>
                    The file name of the file containing the audi tracks should be the content of this element
                </xs:documentation>
            </xs:annotation>
            <xs:extension base="publish:audioSpecificationType">
                <xs:all>
                    <xs:element name="filename">
                        <xs:complexType>
                            <xs:simpleContent>
                                <xs:extension base="xs:string"/>
                            </xs:simpleContent>
                        </xs:complexType>
                    </xs:element>
                </xs:all>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="dubListType">
        <xs:sequence>
            <xs:element maxOccurs="unbounded" name="dub" type="publish:dubType"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="commentaryType">
        <xs:annotation>
            <xs:documentation>
                If no language is given we assume the audio track in the source is the same
                as the default language for the OU if we aren't able to analyze the file
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:annotation>
                <xs:documentation>f
                    The file name of the file containing the audi tracks should be the content of this element
                </xs:documentation>
            </xs:annotation>
            <xs:extension base="publish:audioSpecificationType">
                <xs:all>
                    <xs:element name="filename">
                        <xs:complexType>
                            <xs:simpleContent>
                                <xs:extension base="xs:string"/>
                            </xs:simpleContent>
                        </xs:complexType>
                    </xs:element>
                </xs:all>
                <xs:attribute name="type" type="publish:commentaryTypeType"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:simpleType name="commentaryTypeType">
        <xs:restriction base="xs:string">
            <xs:enumeration value="actor"/>
            <xs:enumeration value="director"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:complexType name="commentaryListType">
        <xs:sequence>
            <xs:element maxOccurs="unbounded" name="commentary" type="publish:commentaryType"/>
        </xs:sequence>
    </xs:complexType>
    <xs:simpleType name="materialProviderType">
        <xs:restriction base="xs:string"/>
    </xs:simpleType>
    <!-- -->
    <xs:complexType name="materialType">
        <xs:sequence>
            <xs:element minOccurs="0" name="id" type="publish:idType">
                <xs:annotation>
                    <xs:documentation>This is used to couple material with an event. If
                        not provided, an id will be generated based on the asset id.
                    </xs:documentation>
                </xs:annotation>
            </xs:element>

            <xs:element minOccurs="0" name="ingestType" type="publish:ingestTypeType">
                <xs:annotation>
                    <xs:documentation>What sort of ingest flow should be used
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="provider" type="publish:materialProviderType"/>
            <xs:choice>
                <xs:element name="materialRef" type="publish:materialRefType">
                    <xs:annotation>
                        <xs:documentation>A reference to an external media file. This can
                            be an ID, a URI, a URL or any other String value. Depends on how ingest is configured in the
                            backend.
                            For the simplest case of providing a URL we support ftp, HTTP and HTTPS.
                            The URLs can be password protected but the username and password have to match [a-zA-Z0-9]*
                            If your files are already in a S3 bucket keys can be configured and then only a relative
                            path provided here. No need to create presigned URLs.
                        </xs:documentation>
                    </xs:annotation>
                </xs:element>
                <xs:element name="vodSource" type="publish:VodSourceType">
                    <xs:annotation>
                        <xs:documentation>If the source is a already transcoded VOD a VOD source should be used instead
                            of a
                            materialRef.
                        </xs:documentation>
                    </xs:annotation>
                </xs:element>
                <xs:element name="liveSource" type="publish:LiveSourceType">
                    <xs:annotation>
                        <xs:documentation>If the source is a live channel a live source should be used instead of a
                            materialRef.
                        </xs:documentation>
                    </xs:annotation>
                </xs:element>
                <xs:element name="externalEncoding" type="publish:ExternalEncodingType">
                    <xs:annotation>
                        <xs:documentation>If the source is a live channel a live source should be used instead of a
                            materialRef.
                        </xs:documentation>
                    </xs:annotation>
                </xs:element>
                <xs:element minOccurs="0" name="externalMediaLocatorList" type="publish:externalMediaLocatorListType"/>
            </xs:choice>
            <xs:element minOccurs="0" maxOccurs="1" name="variants" type="publish:variantsType">
            </xs:element>
            <!--
            <xs:element minOccurs="0" name="variant" type="publish:variantType">
                <xs:annotation>
                    <xs:documentation>
                        If you want to create a variant of a existing ingested material then you can give the
                        material as the materialRef
                        and then here specify here which audio, video and subtitle tracks you want to include in
                        your variant.
                        The variant won't incur any storage or transcoding overhead but will instead resuse the
                        tracks from the source.
                        Combined with a material selector this is a easy way to e.g. show different subs in
                        different regions but keep everything else the same.
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
            -->
            <xs:element minOccurs="0" name="assetIdRef" type="publish:idType">
                <xs:annotation>
                    <xs:documentation>Used when no asset is provided in this message.
                        The assetIdRef should identify the asset to create the material for.
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" maxOccurs="1" name="profiles" type="publish:profileListType">
                <xs:annotation>
                    <xs:documentation>Used to classify materials when multiple active materials are used
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="duration" type="xs:duration">
                <xs:annotation>
                    <xs:documentation>An ISO 8601 duration in format PnYnMnDTnHnMn.NNNS.
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="framerate" type="xs:positiveInteger">
                <xs:annotation>
                    <xs:documentation>If applicable, framerate for the material in FPS
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element default="true" minOccurs="0" name="DRMEnabled" type="xs:boolean">
                <xs:annotation>
                    <xs:documentation>If false then this material is not encrypted.
                        This is true by default.
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element default="false" minOccurs="0" name="migration" type="xs:boolean">
                <xs:annotation>
                    <xs:documentation>Use this to mark this material as a migration material.
                        This is false by default.
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element default="true" minOccurs="0" name="allowAds" type="xs:boolean">
                <xs:annotation>
                    <xs:documentation>Flag to indicate if ads are allowed in this video
                        (in the context of the publication/event)
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="adBreaks" type="publish:adBreakListType">
                <xs:annotation>
                    <xs:documentation>List of ad breaks for the media</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="shortcuts" type="publish:shortcutsListType">
                <xs:annotation>
                    <xs:documentation>List of ad breaks for the media</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="subtitleList" type="publish:subtitleListType">
                <xs:annotation>
                    <xs:documentation>List of available subtitles</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="dubList" type="publish:dubListType">
                <xs:annotation>
                    <xs:documentation>List of available audio languages</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="commentaryList" type="publish:commentaryListType">
                <xs:annotation>
                    <xs:documentation>List of available audio commentaries</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="expiryDate" type="xs:dateTime">
                <xs:annotation>
                    <xs:documentation>Expiry date for licensing in ISO 8601 format
                        (&quot;YYYY-MM-DDThh:mm:ss.SSS&quot;]. Timezone may be included by
                        specifying as Zulu time or by adding a UTC offset. If no value is
                        given then a default value will be used
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="purgeDate" type="xs:dateTime">
                <xs:annotation>
                    <xs:documentation>Media would be purged, if no date then default
                        used
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="removeAfterIngest" type="xs:boolean" default="false">
                <xs:annotation>
                    <xs:documentation>This will only work for some storage solutions</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="videoQuality" type="publish:videoQuality">
                <xs:annotation>
                    <xs:documentation>Select video quality, SD or HD.
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="aspectRatio" type="publish:aspectRatio">
                <xs:annotation>
                    <xs:documentation>Aspect ratio 16_9 or 4_3.
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="priority" type="publish:priority">
                <xs:annotation>
                    <xs:documentation>Priority to use when ingesting this material as a
                        media
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="drmRestrictions" type="publish:drmIncludeCountriesType">
                <xs:annotation>
                    <xs:documentation>Used to set geo restrictions for the material (material level)
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="liveConfig" type="publish:liveConfigType"/>
            <xs:element minOccurs="0" name="ingestDirective" type="xs:string"/>
            <xs:element minOccurs="0" name="cuePoints" type="publish:cuePointListType">
                <xs:annotation>
                    <xs:documentation>List of cue points (intro, chapters, credits,...) for the media</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="contentPolicy" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="externalMediaLocatorListType">
        <xs:sequence>
            <xs:element maxOccurs="unbounded" name="externalMediaLocator"
                        type="publish:externalMediaLocatorType"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="liveConfigType">
        <xs:sequence>
            <xs:element minOccurs="0" name="archiveLength" type="xs:int"/>
            <xs:element minOccurs="0" name="lookaheadFragments" type="xs:int"/>
            <xs:element minOccurs="0" name="dvrWindowLength" type="xs:int"/>
            <xs:element minOccurs="0" name="fixedGOP" type="xs:string"/>
            <xs:element minOccurs="0" name="hlsClientManifestVersion" type="xs:int"/>
            <xs:element minOccurs="0" name="hlsMinimumFragmentLength" type="xs:string"/>
            <xs:element minOccurs="0" name="mpdSuggestedPresentationDelay" type="xs:int"/>
            <xs:element minOccurs="0" name="hlsNoMultiplex" type="xs:boolean"/>
            <xs:element minOccurs="0" name="includeSubtitles" type="xs:boolean"/>
            <xs:element minOccurs="0" name="keyInfo" type="publish:keyInfoType"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="keyInfoType">
        <xs:sequence>
            <xs:element minOccurs="0" name="cenc" type="publish:keyInfoCencType"/>
            <xs:element minOccurs="0" name="hls" type="publish:keyInfoHlsType"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="keyInfoCencType">
        <xs:sequence>
            <xs:element minOccurs="0" name="keyId" type="xs:string"/>
            <xs:element minOccurs="0" name="keyValue" type="xs:string"/>
            <xs:element minOccurs="0" name="widevineLicensServer" type="xs:string"/>
            <xs:element minOccurs="0" name="playreadyLicensServer" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="keyInfoHlsType">
        <xs:sequence>
            <xs:element minOccurs="0" name="keyIV" type="xs:string"/>
            <xs:element minOccurs="0" name="keyValue" type="xs:string"/>
            <xs:element minOccurs="0" name="licenseServerUrl" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="externalMediaLocatorType">
        <xs:simpleContent>
            <xs:extension base="xs:anyURI">
                <xs:attribute name="drm" type="publish:drm"/>
                <xs:attribute name="manifestFormat" type="publish:manifestFormat"/>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>
    <xs:simpleType name="drm">
        <xs:restriction base="xs:string">
            <xs:enumeration value="EDRM"/>
            <xs:enumeration value="CENC"/>
            <xs:enumeration value="UNENCRYPTED"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType name="manifestFormat">
        <xs:restriction base="xs:string">
            <xs:enumeration value="HLS"/>
            <xs:enumeration value="DASH"/>
            <xs:enumeration value="SMOOTHSTREAMING"/>
            <xs:enumeration value="MP3">
                <xs:annotation>
                    <xs:appinfo>
                        <jaxb:typesafeEnumMember name="MP3"/>
                    </xs:appinfo>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="AAC"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType name="videoQuality">
        <xs:restriction base="xs:string">
            <xs:enumeration value="SD"/>
            <xs:enumeration value="HD"/>
            <xs:enumeration value="UHD"/>
            <xs:enumeration value="NONE"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType name="preProcessingDirectiveType">
        <xs:annotation>
            <xs:documentation>Custom specific pre-processing directives
            </xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string"/>
    </xs:simpleType>
    <xs:simpleType name="aspectRatio">
        <xs:restriction base="xs:string">
            <xs:enumeration value="16:9"/>
            <xs:enumeration value="4:3"/>
        </xs:restriction>
    </xs:simpleType>
    <!-- TODO: Need to add a RFA flag to Subtitles as well? -->
    <xs:complexType name="subtitleListType">
        <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="subtitle" type="publish:subtitleType">
                <xs:annotation>
                    <xs:documentation>reference to a subtitle item, for example a
                        teletext page or a subtitle file
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
        </xs:sequence>
        <xs:attribute name="replace" default="false" type="xs:boolean">
            <xs:annotation>
                <xs:documentation>If true the list of subtitles sent in will replace the
                    current list of subtitles
                </xs:documentation>
            </xs:annotation>
        </xs:attribute>
    </xs:complexType>
    <xs:complexType name="profileListType">
        <xs:sequence>
            <xs:element minOccurs="1" maxOccurs="unbounded" name="profile" type="publish:idType">
                <xs:annotation>
                    <xs:documentation>Used to classify materials when multiple active materials are used
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
        </xs:sequence>
    </xs:complexType>
    <xs:simpleType name="SubtitleTypeType">
        <xs:annotation>
            <xs:documentation>Supported types of subtitles</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
            <xs:enumeration value="SUBTITLE">
                <xs:annotation>
                    <xs:documentation>
                        Standard subtitle
                    </xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="CAPTION">
                <xs:annotation>
                    <xs:documentation>
                        Hard of hearing subtitle
                    </xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="FORCED">
                <xs:annotation>
                    <xs:documentation>
                        Eg. foreign languages are translated but the dialogue in the local language is not transcribed
                    </xs:documentation>
                </xs:annotation>
            </xs:enumeration>
        </xs:restriction>
    </xs:simpleType>
    <xs:complexType name="subtitleType">
        <xs:simpleContent>
            <xs:extension base="xs:string">
                <xs:attribute name="id" type="publish:idType">
                    <xs:annotation>
                        <xs:documentation>Unique id for this subtitle. If not given language and type will be used as
                            identifier
                        </xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="delete" type="xs:boolean">
                    <xs:annotation>
                        <xs:documentation>Should this subtitle be deleted</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="language" type="publish:language"/>
                <xs:attribute name="name" type="xs:string">
                    <xs:annotation>
                        <xs:documentation>name of the subtitle. If not provided, the name will be equal to the
                            language
                        </xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="format" type="publish:subtitleFormatType">
                    <xs:annotation>
                        <xs:documentation>The format of the subtitles</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="type" type="publish:SubtitleTypeType"/>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>
    <xs:simpleType name="subtitleFormatType">
        <xs:restriction base="xs:string">
            <xs:enumeration value="closed"/>
            <!-- text-tv text -->
            <xs:enumeration value="open"/>
            <xs:enumeration value="openAndTeletext"/>
            <xs:enumeration value="teletext"/>
            <xs:enumeration value="dvbText"/>
            <xs:enumeration value="other"/>
            <xs:enumeration value="N/A"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:complexType name="mediaListType">
        <xs:sequence>
            <xs:element maxOccurs="unbounded" name="media" type="publish:mediaType"/>
        </xs:sequence>
    </xs:complexType>
    <xs:simpleType name="materialReferenceTypeType">
        <xs:restriction base="xs:string">
            <xs:enumeration value="video"/>
            <xs:enumeration value="audio"/>
            <xs:enumeration value="subtitle"/>
            <xs:enumeration value="graphics"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:complexType name="mediaType">
        <xs:sequence>
            <xs:element name="subtitleList" type="publish:subtitleListType">
                <xs:annotation>
                    <xs:documentation>list of available subtitles</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="rfa" type="xs:boolean">
                <xs:annotation>
                    <xs:documentation>&quot;Ready For Airing&quot;: This flag will be set to true
                        if the media has been checked by QC (Quality Control). If this
                        flag is not set to true it means that the file is not yet
                        available.
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="materialRightsListType">
        <xs:sequence>
            <xs:element maxOccurs="unbounded" name="rights" type="publish:materialRightsType"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="materialRightsType">
        <xs:annotation>
            <xs:documentation>DateTime in UTC</xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:element name="validFrom" type="xs:dateTime">
                <xs:annotation>
                    <xs:documentation>Start of period where right is valid
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="validTo" type="xs:dateTime">
                <xs:annotation>
                    <xs:documentation>End of period where right is valid
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="materialListType">
        <xs:annotation>
            <xs:documentation>This is used for better readability in higher
                nodes. I.e instead of having a sequence of materialTypes in the
                publishType, just add an element with this type.
            </xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:element maxOccurs="unbounded" name="material" type="publish:materialType"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="adBreakListType">
        <xs:sequence>
            <xs:element minOccurs="0" name="pre" type="publish:adMarkerType"/>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="mid" type="publish:midAdBreakType"/>
            <xs:element minOccurs="0" name="post" type="publish:adMarkerType"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="emptyObjectType"/>
    <xs:complexType name="adMarkerType">
        <xs:sequence>
            <xs:element name="customParameters" minOccurs="0" type="publish:adBreakCustomParameterListType"/>
        </xs:sequence>
        <xs:attribute name="maxCount" type="xs:integer"/>
        <xs:attribute name="maxDuration" type="xs:duration"/>
    </xs:complexType>
    <xs:complexType name="adBreakCustomParameterListType">
        <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="unbounded" name="param" type="publish:adBreakCustomParameterType"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="adBreakCustomParameterType">
        <xs:complexContent>
            <xs:extension base="publish:emptyObjectType">
                <xs:attribute name="key" type="xs:string" use="required">
                    <xs:annotation>
                        <xs:documentation/>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="value" type="xs:string" use="required">
                    <xs:annotation>
                        <xs:documentation/>
                    </xs:annotation>
                </xs:attribute>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="midAdBreakType">
        <xs:complexContent>
            <xs:extension base="publish:adMarkerType">
                <xs:attribute name="offset" type="xs:time" use="required">
                    <xs:annotation>
                        <xs:documentation/>
                    </xs:annotation>
                </xs:attribute>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="shortcutsListType">
        <xs:sequence>
            <xs:element name="intro" minOccurs="0" type="publish:shortcutType"/>
            <xs:element name="credits" minOccurs="0" type="publish:shortcutType"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="shortcutType">
        <xs:attribute name="offset" type="xs:time" use="required"/>
    </xs:complexType>
    <!-- Common -->
    <xs:simpleType name="idType">
        <xs:annotation>
            <xs:documentation>A general ID type for entities</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
            <xs:pattern value="[0-9A-Za-z\-_]+"/>
            <xs:minLength value="1"/>
            <xs:maxLength value="128"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType name="pathElementType">
        <xs:annotation>
            <xs:documentation>A type suitable for URL path elements</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
            <xs:pattern value="[0-9a-z\-]+"/>
            <xs:minLength value="3"/>
            <xs:maxLength value="256"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType name="priority">
        <xs:restriction base="xs:integer">
            <xs:minInclusive value="1"/>
            <xs:maxInclusive value="100"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType name="nidType">
        <xs:annotation>
            <xs:documentation>Unique name id, i.e. the normalized textual
                representation, e.g.: no space, lower case, no diacritic characters.
                Language attribute can be used to specify a localized name for the
                tag.
            </xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
            <xs:pattern value="[0-9a-z\-_]+"/>
            <xs:minLength value="3"/>
            <xs:maxLength value="128"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:complexType name="externalReferenceListType">
        <xs:sequence>
            <xs:element maxOccurs="unbounded" name="externalReference"
                        type="publish:externalReferenceType">
                <xs:annotation>
                    <xs:documentation>List of external resources that can used to
                        connect/boost the content data with.
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="externalReferenceType">
        <xs:sequence>
            <xs:element name="provider" type="publish:notNullString">
                <xs:annotation>
                    <xs:documentation>Who is the provides for the extend data that can
                        be used for this content. It can for example be score24.com or
                        IMDB.com
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="id" type="publish:idType">
                <xs:annotation>
                    <xs:documentation>Data identifier to map this content to in the
                        external provider/partners data
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="uri" type="xs:anyURI">
                <xs:annotation>
                    <xs:documentation>Resource to use for reach the data at the
                        provider
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="tagListType">
        <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="tagIdRef" type="publish:tagRefType"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="tagType">
        <xs:annotation>
            <xs:documentation>Use to define a tag, i.e. in content. Lower
                priority number means higher importance.
            </xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:element name="tagNames" type="publish:tagNameListType"/>
            <xs:element minOccurs="0" name="adminName" type="publish:shortStringType">
                <xs:annotation>
                    <xs:documentation>A human readable name of the tag used to display it in various
                        administrative views.
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="imageList" type="publish:imageListType"/>
            <xs:element minOccurs="0" name="tagParents" type="publish:tagParentListType"/>
        </xs:sequence>
        <xs:attribute name="id" type="publish:idType" use="required"/>
        <xs:attribute name="type" type="publish:nidType" use="required"/>
    </xs:complexType>
    <xs:complexType name="tagNameListType">
        <xs:sequence>
            <xs:element maxOccurs="unbounded" name="tagName" type="publish:tagNameType"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="tagParentListType">
        <xs:sequence>
            <xs:element maxOccurs="unbounded" name="tagIdRef" type="publish:tagRefType"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="tagNameType">
        <xs:simpleContent>
            <xs:restriction base="publish:localizedTextType">
                <xs:minLength value="2"/>
                <xs:maxLength value="300"/>
            </xs:restriction>
        </xs:simpleContent>
    </xs:complexType>
    <xs:complexType name="tagRefType">
        <xs:annotation>
            <xs:documentation>Optional reference to an existing tag with CU or BU level defined. For CU level entities
                this value will be ignored.
            </xs:documentation>
        </xs:annotation>
        <xs:simpleContent>
            <xs:extension base="publish:idType">
                <xs:attribute name="ownedByCustomer" default="false" type="xs:boolean"/>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>
    <xs:complexType name="description">
        <xs:annotation>
            <xs:documentation>A general type for describing something, attribute
                indicating the language.
            </xs:documentation>
        </xs:annotation>
        <xs:simpleContent>
            <xs:extension base="xs:string">
                <xs:attribute name="language" type="publish:language">
                    <xs:annotation>
                        <xs:documentation>The language here refers to the language on which the description is made.
                        </xs:documentation>
                    </xs:annotation>
                </xs:attribute>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>
    <xs:complexType name="publicationRightsType">
        <xs:annotation>
            <xs:documentation>publication rights type</xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:element name="productList" type="publish:productListType"/>
            <xs:element minOccurs="0" name="serviceList" type="publish:serviceListType"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="drmRestrictionsType">
        <xs:annotation>
            <xs:documentation>DRM Restrictions.</xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:choice>
                <xs:annotation>
                    <xs:documentation>If studioContractID is defined then all other
                        properties, except includeCountries, are defined elsewhere.
                    </xs:documentation>
                </xs:annotation>
                <xs:element minOccurs="0" name="studioContractID" type="xs:string"/>
                <xs:sequence>
                    <xs:element minOccurs="0" name="downloadAllowed" type="xs:boolean"/>
                    <xs:element minOccurs="0" name="mirroringAllowed" type="xs:boolean"/>
                    <xs:element minOccurs="0" name="HDAllowed" type="xs:boolean"/>
                    <xs:element minOccurs="0" name="HDMIAllowed" type="xs:boolean"/>
                    <xs:element minOccurs="0" name="MaxBitRate">
                        <xs:simpleType>
                            <xs:restriction base="xs:long">
                                <xs:minInclusive value="1"/>
                            </xs:restriction>
                        </xs:simpleType>
                    </xs:element>
                    <xs:element minOccurs="0" name="deviceList" type="publish:deviceListType"/>
                </xs:sequence>
            </xs:choice>
            <xs:element minOccurs="0" name="includeCountries" type="publish:countryListType"/>
            <xs:element minOccurs="0" name="excludedCountries" type="publish:countryListType"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="drmIncludeCountriesType">
        <xs:annotation>
            <xs:documentation>DRM included countries.</xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:element minOccurs="0" name="includeCountries" type="publish:countryListType"/>
            <xs:element minOccurs="0" name="excludedCountries" type="publish:countryListType"/>
            <xs:element minOccurs="0" name="downloadAllowed" type="xs:boolean" default="false"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="countryListType">
        <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="country" type="publish:ISOCountry">
                <xs:annotation>
                    <xs:documentation>code in ISO 3166-1-alpha-2</xs:documentation>
                </xs:annotation>
            </xs:element>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="deviceListType">
        <xs:sequence>
            <xs:element maxOccurs="unbounded" name="device" type="publish:deviceType">
                <xs:annotation>
                    <xs:documentation>Name of the device</xs:documentation>
                </xs:annotation>
            </xs:element>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="deviceType">
        <xs:sequence>
            <xs:element name="deviceType" type="publish:deviceTypeType"/>
            <xs:element minOccurs="0" name="vendor" type="xs:string"/>
            <xs:element minOccurs="0" name="os" type="xs:string"/>
            <xs:element minOccurs="0" name="osVersion" type="xs:string"/>
            <xs:element minOccurs="0" name="model" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>
    <xs:simpleType name="deviceTypeType">
        <xs:annotation>
            <xs:documentation>Controls the device type</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
            <xs:enumeration value="Web"/>
            <xs:enumeration value="Mobile"/>
            <xs:enumeration value="Tablet"/>
            <xs:enumeration value="MediaPlayer"/>
            <xs:enumeration value="SmartTV"/>
            <xs:enumeration value="Console"/>
            <xs:enumeration value="STB"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:complexType name="productListType">
        <xs:sequence>
            <xs:element maxOccurs="unbounded" name="product" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Name of the product</xs:documentation>
                </xs:annotation>
            </xs:element>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="serviceListType">
        <xs:sequence>
            <xs:element maxOccurs="unbounded" name="service" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Name of the platform</xs:documentation>
                </xs:annotation>
            </xs:element>
        </xs:sequence>
    </xs:complexType>
    <xs:simpleType name="metadataProviderType">
        <xs:restriction base="xs:string"/>
    </xs:simpleType>
    <xs:complexType abstract="true" name="abstractAssetType">
        <xs:annotation>
            <xs:documentation>Abstract type that holds attributes common to
                series, season and content
            </xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:element minOccurs="0" name="id" type="publish:idType">
                <xs:annotation>
                    <xs:documentation>unique id for asset, unique within each provider
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="assetName" type="xs:string">
                <xs:annotation>
                    <xs:documentation>A human readable name of the asset used to display it in various
                        administrative views.
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:sequence minOccurs="0">
                <xs:element name="provider" type="publish:metadataProviderType"/>
                <xs:element minOccurs="0" name="providerId" type="xs:string"/>
            </xs:sequence>
            <xs:element minOccurs="0" name="studio" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Name of production studio.</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="productionYear">
                <xs:simpleType>
                    <xs:restriction base="xs:string">
                        <xs:pattern value="[1-2][0-9][0-9][0-9]"/>
                    </xs:restriction>
                </xs:simpleType>
            </xs:element>
            <xs:element minOccurs="0" name="countryOfOriginList" type="publish:countryListType">
                <xs:annotation>
                    <xs:documentation>list of production countries. Use country codes
                        in IS0 3166-1-alpha-2
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="titleList" type="publish:titleListType">
                <xs:annotation>
                    <xs:documentation>Title list for content. At least one occurrence
                        with the language used in the market/country displaying the
                        content.
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="originalTitle" type="xs:string">
                <xs:annotation>
                    <xs:documentation>What is the title of the asset in the original language</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="descriptionList" type="publish:descriptionListType">
                <xs:annotation>
                    <xs:documentation>List of descriptions</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="creditList" type="publish:creditListType">
                <xs:annotation>
                    <xs:documentation>list of actors, producers etc. should be
                        consistent within each provider
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="tagList" type="publish:tagListType">
                <xs:annotation>
                    <xs:documentation>list of tags for the content.</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="imageList" type="publish:imageListType">
                <xs:annotation>
                    <xs:documentation>list of content related images.
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="parentalRatingList" type="publish:parentalRatingListType"/>
            <xs:element minOccurs="0" name="externalReferenceList" type="publish:externalReferenceListType"/>
            <xs:element minOccurs="0" name="collectionList" type="publish:collectionReferenceListType">
                <xs:annotation>
                    <xs:documentation>list of collection ids that this asset should belong to.</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="adminLabelList" type="publish:adminLabelListType">
                <xs:annotation>
                    <xs:documentation>list of labels that can be used for finding the asset by backend clients. This
                        field is not mapped to end user facing models.
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="linkedAssetList" type="publish:linkedAssetListType">
                <xs:annotation>
                    <xs:documentation>list of links to other entities.</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="materialPropertiesOverride" type="publish:materialPropertiesOverrideType">
                <xs:annotation>
                    <xs:documentation>Material properties used in exposure on aggregated level instead of properties
                        otherwise calculated from materials.
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="customData" type="publish:customDataType"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="seriesType">
        <xs:complexContent>
            <xs:extension base="publish:abstractAssetType">
                <xs:sequence>
                    <xs:element minOccurs="0" name="slugs" type="publish:slugsListType">
                        <xs:annotation>
                            <xs:documentation>Ordered list of slugs for this asset.
                                Default slug is the first entry in the list. Note that this slug currently can't
                                be used to fetch the seasons/episodes of the series.
                            </xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element minOccurs="0" name="runtime" type="xs:duration">
                        <xs:annotation>
                            <xs:documentation>An end user-friendly duration of the asset
                            </xs:documentation>
                        </xs:annotation>
                    </xs:element>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="seasonType">
        <xs:complexContent>
            <xs:extension base="publish:abstractAssetType">
                <xs:sequence>
                    <xs:element minOccurs="0" name="seriesId" type="publish:idType">
                        <xs:annotation>
                            <xs:documentation>id for Series, not unique</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element minOccurs="0" name="seasonNumber" type="xs:positiveInteger">
                        <xs:annotation>
                            <xs:documentation>Season number for the series.
                            </xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element minOccurs="0" name="numberOfEpisodes" type="xs:positiveInteger">
                        <xs:annotation>
                            <xs:documentation>If the content belongs to a series/season, this
                                is the total number of episodes in that series/season.
                            </xs:documentation>
                        </xs:annotation>
                    </xs:element>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="assetType">
        <xs:complexContent>
            <xs:extension base="publish:abstractAssetType">
                <xs:sequence>
                    <xs:element minOccurs="1" name="assetType" type="publish:assetTypeType">
                        <xs:annotation>
                            <xs:documentation>Type of the asset</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element minOccurs="0" name="slugs" type="publish:slugsListType">
                        <xs:annotation>
                            <xs:documentation>Ordered list of slugs for this asset.
                                Default slug is the first entry in the list.
                                The rest of the slugs can be used to address the asset.
                            </xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element minOccurs="0" name="assetIdRef" type="publish:idType">
                        <xs:annotation>
                            <xs:documentation>Reference to other asset entity that is
                                related. Use is for a trailer to reference the original content.
                            </xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element minOccurs="0" name="drmRestrictions"
                                type="publish:drmIncludeCountriesType">
                        <xs:annotation>
                            <xs:documentation>Used to set geo restrictions for the asset (asset level and not
                                publication level)
                                Note that we only support included countries at this stage on asset level and not the
                                other elements in drmRestrictionsType
                            </xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:sequence minOccurs="0">
                        <xs:element minOccurs="0" name="seriesId" type="publish:idType">
                            <xs:annotation>
                                <xs:documentation>id for series. Has to be globally unique. Only present if
                                    content is connected to a series.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:sequence>
                            <xs:element name="seasonId" type="publish:idType">
                                <xs:annotation>
                                    <xs:documentation>id for season, not unique. Only present if
                                        content is connected to a season.
                                    </xs:documentation>
                                </xs:annotation>
                            </xs:element>
                            <xs:element name="episodeNumber" type="xs:positiveInteger">
                                <xs:annotation>
                                    <xs:documentation>Episode number for the program
                                    </xs:documentation>
                                </xs:annotation>
                            </xs:element>
                        </xs:sequence>
                    </xs:sequence>
                    <xs:element minOccurs="0" name="airingStartTime" type="xs:dateTime"/>
                    <xs:element minOccurs="0" name="runtime" type="xs:duration">
                        <xs:annotation>
                            <xs:documentation>An end user-friendly duration of the asset
                            </xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element minOccurs="0" name="spokenLanguages" type="publish:languageListType"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:simpleType name="assetTypeType">
        <xs:restriction base="xs:string">
            <xs:enumeration value="episode"/>
            <xs:enumeration value="channel"/>
            <xs:enumeration value="movie"/>
            <xs:enumeration value="trailer"/>
            <xs:enumeration value="ad"/>
            <xs:enumeration value="clip"/>
            <xs:enumeration value="collection"/>
            <xs:enumeration value="podcast"/>
            <xs:enumeration value="podcast_episode"/>
            <xs:enumeration value="other"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType name="ingestTypeType">
        <xs:restriction base="xs:string">
            <xs:enumeration value="external"/>
            <xs:enumeration value="normal"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:complexType name="titleListType">
        <xs:sequence>
            <xs:sequence maxOccurs="unbounded">
                <xs:choice>
                    <xs:sequence>
                        <xs:element name="title" type="publish:titleType"/>
                        <xs:element minOccurs="0" name="sortingTitle" type="publish:titleType"/>
                    </xs:sequence>
                    <xs:element name="removeTitles" type="publish:removeLocalizedType"/>
                </xs:choice>
            </xs:sequence>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="descriptionListType">
        <xs:annotation>
            <xs:documentation>Editorial text that describes the content, can be
                publicly published.
            </xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="unbounded" name="description" type="publish:descriptionType"/>
            <xs:element minOccurs="0" maxOccurs="unbounded" name="removeDescriptions"
                        type="publish:removeLocalizedType"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="commentListType">
        <xs:annotation>
            <xs:documentation>Editorial description that shall not be published,
                but it can be indexed in a search. Thought usage is to write down
                descriptive intro, manuscript or voice-over that applies to the
                content, Text is not required to be written to be ready for public
                view, but the content will be indexed and possible to use in a
                search.
            </xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:element maxOccurs="unbounded" name="comment" type="publish:descriptionType"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="parentalRatingListType">
        <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="unbounded" name="parentalRating" type="publish:parentalRatingType"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="parentalRatingType">
        <xs:annotation>
            <xs:documentation>See
                http://en.wikipedia.org/wiki/Motion_picture_rating_system for more
                information about parental ratings.
            </xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:element name="rating" type="publish:notNullString">
                <xs:annotation>
                    <xs:documentation>Parental rating age in year. 0 years =&gt;No
                        restriction. Also see
                        http://en.wikipedia.org/wiki/Motion_picture_rating_system for more
                        information.
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="scheme" type="publish:notNullString">
                <xs:annotation>
                    <xs:documentation>Rating code that motivates the parental guidance.
                        Code to descriptive text is mapped in client GUI.
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="country" type="publish:ISOCountry">
                <xs:annotation>
                    <xs:documentation>Two char country code according to ISO
                        3166-1-alpha-2. Empty or absent country attribute has the meaning
                        that it is global default value for any country. Specific country
                        declaration overrides the default. If country value is repeated,
                        result is undefined which one to select.
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="simpleTitleType">
        <xs:simpleContent>
            <xs:restriction base="publish:simpleTextType">
                <xs:maxLength value="100"/>
            </xs:restriction>
        </xs:simpleContent>
    </xs:complexType>
    <xs:complexType name="titleType">
        <xs:simpleContent>
            <xs:extension base="publish:untypedTitleType"/>
        </xs:simpleContent>
    </xs:complexType>
    <xs:complexType name="untypedTitleType">
        <xs:simpleContent>
            <xs:restriction base="publish:localizedTextType">
                <xs:minLength value="1"/>
                <xs:maxLength value="300"/>
            </xs:restriction>
        </xs:simpleContent>
    </xs:complexType>
    <xs:complexType name="descriptionType">
        <xs:simpleContent>
            <xs:extension base="publish:untypedDescriptionType">
                <xs:attribute name="length" type="publish:descriptionLengthType">
                    <xs:annotation>
                        <xs:documentation/>
                    </xs:annotation>
                </xs:attribute>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>
    <xs:simpleType name="descriptionLengthType">
        <xs:annotation>
            <xs:documentation>length (and content) of the description e.g, tiny
                may be 1-25 characters, short 26-140,medium 141-240, long 241-999,
                extended &gt;1000
            </xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
            <xs:enumeration value="tiny"/>
            <xs:enumeration value="short"/>
            <xs:enumeration value="medium"/>
            <xs:enumeration value="long"/>
            <xs:enumeration value="extended"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:complexType name="untypedDescriptionType">
        <xs:simpleContent>
            <xs:restriction base="publish:localizedTextType">
                <xs:minLength value="1"/>
                <xs:maxLength value="3000"/>
            </xs:restriction>
        </xs:simpleContent>
    </xs:complexType>
    <xs:complexType name="removeLocalizedType">
        <xs:annotation>
            <xs:documentation>Mark fields of type for removal.
            </xs:documentation>
        </xs:annotation>
        <xs:simpleContent>
            <xs:extension base="publish:localizedTextType"/>
        </xs:simpleContent>
    </xs:complexType>
    <xs:complexType name="localizedTextType">
        <xs:annotation>
            <xs:documentation>Localized text element with language attribute.
            </xs:documentation>
        </xs:annotation>
        <xs:simpleContent>
            <xs:extension base="xs:string">
                <xs:attribute name="language" type="publish:language"/>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>
    <xs:complexType name="creditListType">
        <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="unbounded" name="credit" type="publish:creditType"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="creditItemBioType">
        <xs:annotation>
            <xs:documentation>Localized bio for a person appearing in the credits
            </xs:documentation>
        </xs:annotation>
        <xs:simpleContent>
            <xs:extension base="xs:string">
                <xs:attribute name="language" type="publish:language"/>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>
    <xs:complexType name="creditItemBioListType">
        <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="unbounded" name="bio" type="publish:creditItemBioType"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="creditType">
        <xs:sequence>
            <xs:element minOccurs="0" name="id" type="publish:idType"/>
            <xs:element name="name" type="publish:notNullString"/>
            <xs:element minOccurs="0" name="rolename" type="publish:notNullString"/>
            <xs:element minOccurs="0" name="function" type="publish:notNullString"/>
            <xs:element minOccurs="0" name="dateOfBirth" type="xs:date"/>
            <xs:element minOccurs="0" name="dateOfDeath" type="xs:date"/>
            <xs:element minOccurs="0" name="bioList" type="publish:creditItemBioListType"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="imageType">
        <xs:sequence>
            <xs:element minOccurs="0" name="id" type="publish:idType">
                <xs:annotation>
                    <xs:documentation>The id of the image from the origin system. For
                        example it might be img_123.
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="url" type="xs:anyURI"/>
            <xs:element minOccurs="0" name="width" type="xs:positiveInteger">
                <xs:annotation>
                    <xs:documentation>In unit px.</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="height" type="xs:positiveInteger">
                <xs:annotation>
                    <xs:documentation>In unit px.</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="purpose" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Purpose of image, initial intended usage for the
                        image from source system.
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="orientation">
                <xs:simpleType>
                    <xs:restriction base="xs:string">
                        <xs:enumeration value="landscape"/>
                        <xs:enumeration value="portrait"/>
                        <xs:enumeration value="square"/>
                        <xs:enumeration value="unknown"/>
                    </xs:restriction>
                </xs:simpleType>
            </xs:element>
            <xs:element minOccurs="0" name="copyright" type="publish:notNullString"/>
        </xs:sequence>
        <xs:attribute name="forceReload" default="false" type="xs:boolean">
            <xs:annotation>
                <xs:documentation>Ignore service caches and reload image from source.</xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute name="priority">
            <xs:annotation>
                <xs:documentation>lower priority number means higher importance
                </xs:documentation>
            </xs:annotation>
            <xs:simpleType>
                <xs:restriction base="xs:long">
                    <xs:minInclusive value="0"/>
                </xs:restriction>
            </xs:simpleType>
        </xs:attribute>
        <xs:attribute name="language" type="publish:language"/>
    </xs:complexType>
    <xs:complexType name="imageListType">
        <xs:annotation>
            <xs:documentation>priority attribute on image element indicate &quot;sort
                order&quot;, lower priority number means higher importance.
            </xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="unbounded" name="image" type="publish:imageType"/>
            <xs:element minOccurs="0" maxOccurs="unbounded" name="removeImages" type="publish:removeLocalizedType"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="simpleTextType">
        <xs:simpleContent>
            <xs:extension base="xs:string">
                <xs:attribute name="language" type="publish:language"/>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>
    <xs:complexType name="publicationType">
        <xs:annotation>
            <xs:documentation/>
        </xs:annotation>
        <xs:sequence>
            <xs:element name="id" type="publish:idType">
                <xs:annotation>
                    <xs:documentation>Per provider unique id for the event.
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="assetIdRef" type="publish:idType">
                <xs:annotation>
                    <xs:documentation>Reference to an asset id. Should only be provided
                        when an actual asset element is NOT provided.
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:choice>
                <xs:annotation>
                    <xs:documentation>A publish time either needs to have
                        start/end/publish times or a revoked tag.
                    </xs:documentation>
                </xs:annotation>
                <xs:sequence>
                    <xs:element name="startTime" type="xs:dateTime">
                        <xs:annotation>
                            <xs:documentation>Time when Vod is possible to start play.
                            </xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element name="endTime" type="xs:dateTime">
                        <xs:annotation>
                            <xs:documentation>Time when Vod is no longer possible to play.
                            </xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element minOccurs="0" name="publishTime" type="xs:dateTime">
                        <xs:annotation>
                            <xs:documentation>Time when the vod information can be exposed to
                                the customer. Vod can not be played until startTime. If publish
                                is after start or empty (nil), then publishTime = startTime.
                            </xs:documentation>
                        </xs:annotation>
                    </xs:element>
                </xs:sequence>
                <xs:element default="false" name="revoked" type="xs:boolean">
                    <xs:annotation>
                        <xs:documentation>If this flag is set to true then the publication
                            is to be marked for revocation.
                        </xs:documentation>
                    </xs:annotation>
                </xs:element>
            </xs:choice>
            <xs:element minOccurs="0" name="publicationRights" type="publish:publicationRightsType"/>
            <xs:element minOccurs="0" name="drmRestrictions" type="publish:drmRestrictionsType"/>
            <xs:element minOccurs="0" name="customData" type="publish:customDataType"/>
            <xs:element minOccurs="0" name="assetRights" type="publish:assetRightsType"/>
            <xs:element minOccurs="0" name="deviceRightsList" type="publish:deviceRightsList"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="publicationListType">
        <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="publication" type="publish:publicationType"/>
        </xs:sequence>
        <xs:attribute name="revokeAll" type="xs:boolean"/>
    </xs:complexType>
    <xs:simpleType name="notNullString">
        <xs:restriction base="xs:string">
            <xs:minLength value="1"/>
            <xs:maxLength value="3000"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:complexType name="materialPropertiesOverrideType">
        <xs:sequence>
            <xs:element name="subtitleTrackLanguages" minOccurs="0" type="publish:languageListType"/>
            <xs:element name="audioTrackLanguages" minOccurs="0" type="publish:languageListType"/>
            <xs:element name="duration" minOccurs="0" type="xs:duration"/>
        </xs:sequence>
    </xs:complexType>
    <!-- Begin Contract -->
    <xs:complexType name="contractType">
        <xs:sequence>
            <xs:element name="id" type="publish:idType">
                <xs:annotation>
                    <xs:documentation>Per provider unique id for the contract.
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="externalId" type="publish:idType">
                <xs:annotation>
                    <xs:documentation>Reference to a contract id only be provided
                        when an actual id element is NOT provided.
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="contractName" type="xs:string"/>
            <xs:element minOccurs="0" name="originator" type="xs:string"/>
            <xs:element name="created" type="xs:dateTime"/>
            <xs:element minOccurs="0" name="changed" type="xs:dateTime"/>
            <xs:element minOccurs="0" name="assetRights" type="publish:assetRightsType"/>
            <xs:element minOccurs="0" name="allowedCountries" type="publish:countryListType"/>
            <xs:element minOccurs="0" name="catchupAllowed" type="xs:boolean"/>
            <xs:element minOccurs="0" name="devices" type="publish:contractDeviceList"/>
            <xs:element minOccurs="0" name="studio" type="xs:string"/>
            <xs:element minOccurs="0" name="rentalHours" type="xs:integer"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="contractDeviceList">
        <xs:sequence>
            <xs:element maxOccurs="unbounded" name="contractDevice" type="publish:contractDeviceType"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="contractDeviceType">
        <xs:sequence>
            <xs:element name="contractDeviceDataType" type="publish:contractDeviceTypeType"/>
            <xs:element minOccurs="0" name="manufacturer" type="xs:string"/>
            <xs:element minOccurs="0" name="os" type="xs:string"/>
            <xs:element minOccurs="0" name="osVersion" type="xs:string"/>
            <xs:element minOccurs="0" name="model" type="xs:string"/>
            <xs:element name="assetRights" type="publish:assetRightsType"/>
        </xs:sequence>
    </xs:complexType>
    <xs:simpleType name="contractDeviceTypeType">
        <xs:annotation>
            <xs:documentation>Supported device types for contract device
            </xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
            <xs:enumeration value="WEB"/>
            <!-- WEB -->
            <xs:enumeration value="MOBILE"/>
            <!-- MOBILE -->
            <xs:enumeration value="TABLET"/>
            <!-- TABLET -->
            <xs:enumeration value="APPLE_TV"/>
            <!-- APPLE TV -->
            <xs:enumeration value="SMART_TV"/>
            <!-- SMART TV -->
            <xs:enumeration value="CONSOLE"/>
            <!-- CONSOLE -->
            <xs:enumeration value="STB"/>
            <!-- STB -->
        </xs:restriction>
    </xs:simpleType>
    <xs:complexType name="assetRightsType">
        <xs:annotation>
            <xs:documentation>Asset rights specified in the contract/device
            </xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:element minOccurs="0" name="minBitrate" type="xs:unsignedInt"/>
            <xs:element minOccurs="0" name="maxBitrate" type="xs:unsignedInt"/>
            <xs:element minOccurs="0" name="maxResWidth" type="xs:unsignedInt"/>
            <xs:element minOccurs="0" name="maxResHeight" type="xs:unsignedInt"/>
            <xs:element minOccurs="0" name="playCount" type="xs:unsignedInt"/>
            <xs:element minOccurs="0" name="maxFileSize" type="xs:unsignedLong"/>
            <xs:element minOccurs="0" name="activation" type="xs:dateTime"/>
            <xs:element minOccurs="0" name="expiration" type="xs:dateTime"/>
            <xs:element minOccurs="0" name="maxAds" type="xs:unsignedInt"/>
            <xs:element minOccurs="0" name="wifiBlocked" type="xs:boolean"/>
            <xs:element minOccurs="0" name="threeGBlocked" type="xs:boolean"/>
            <xs:element minOccurs="0" name="fourGBlocked" type="xs:boolean"/>
            <xs:element minOccurs="0" name="HDMIBlocked" type="xs:boolean"/>
            <xs:element minOccurs="0" name="airplayBlocked" type="xs:boolean"/>
            <xs:element minOccurs="0" name="downloadBlocked" type="xs:boolean"/>
            <xs:element minOccurs="0" name="streamingBlocked" type="xs:boolean"/>
            <xs:element minOccurs="0" name="analyticsEnabled" type="xs:boolean"/>
            <xs:element minOccurs="0" name="sessionShiftEnabled" type="xs:boolean"/>
            <xs:element minOccurs="0" name="rwEnabled" type="xs:boolean"/>
            <xs:element minOccurs="0" name="ffEnabled" type="xs:boolean"/>
            <xs:element minOccurs="0" name="timeshiftEnabled" type="xs:boolean"/>
            <xs:element minOccurs="0" name="amcDebugLogEnabled" type="xs:boolean"/>
            <xs:element minOccurs="0" name="locationEnabled" type="xs:boolean"/>
            <xs:element minOccurs="0" name="minPlayPosition" type="xs:unsignedInt"/>
            <xs:element minOccurs="0" name="maxPlayPosition" type="xs:unsignedInt"/>
            <xs:element minOccurs="0" name="jailbrokenBlocked" type="xs:boolean"/>
            <xs:element minOccurs="0" name="downloadMaxSecondsAfterDownload" type="xs:unsignedInt"/>
            <xs:element minOccurs="0" name="downloadMaxSecondsAfterPlay" type="xs:unsignedInt"/>
            <xs:element minOccurs="0" name="anonymousIpBlocked" type="xs:boolean"/>
            <xs:element minOccurs="0" name="vpnDetectionRequired" type="xs:boolean"/>
            <xs:element minOccurs="0" name="maxDownloadCount" type="xs:unsignedInt"/>
        </xs:sequence>
    </xs:complexType>
    <!-- copy of ContractDevice with a more generic name used in publications. -->
    <xs:complexType name="deviceRightsList">
        <xs:sequence>
            <xs:element maxOccurs="unbounded" name="deviceRights" type="publish:deviceRightsType"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="deviceRightsType">
        <xs:sequence>
            <xs:element name="deviceType" type="publish:deviceRightsTypeType"/>
            <xs:element minOccurs="0" name="manufacturer" type="xs:string"/>
            <xs:element minOccurs="0" name="os" type="xs:string"/>
            <xs:element minOccurs="0" name="osVersion" type="xs:string"/>
            <xs:element minOccurs="0" name="model" type="xs:string"/>
            <xs:element name="assetRights" type="publish:assetRightsType"/>
        </xs:sequence>
    </xs:complexType>
    <xs:simpleType name="deviceRightsTypeType">
        <xs:annotation>
            <xs:documentation>Supported device types for device rights
            </xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
            <xs:enumeration value="WEB"/>
            <!-- WEB -->
            <xs:enumeration value="MOBILE"/>
            <!-- MOBILE -->
            <xs:enumeration value="TABLET"/>
            <!-- TABLET -->
            <xs:enumeration value="APPLE_TV"/>
            <!-- APPLE TV -->
            <xs:enumeration value="SMART_TV"/>
            <!-- SMART TV -->
            <xs:enumeration value="CONSOLE"/>
            <!-- CONSOLE -->
            <xs:enumeration value="STB"/>
            <!-- STB -->
        </xs:restriction>
    </xs:simpleType>
    <!-- Begin long country/language codes -->
    <xs:simpleType name="ISOCountry">
        <xs:annotation>
            <xs:documentation>Two-letter (alpha-2) ISO 3166-1 code for one of the
                243 countries.
            </xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
            <xs:enumeration value="AF"/>
            <!-- AFGHANISTAN -->
            <xs:enumeration value="AX"/>
            <!-- &Aring;LAND ISLANDS -->
            <xs:enumeration value="AL"/>
            <!-- ALBANIA -->
            <xs:enumeration value="DZ"/>
            <!-- ALGERIA -->
            <xs:enumeration value="AS"/>
            <!-- AMERICAN SAMOA -->
            <xs:enumeration value="AD"/>
            <!-- ANDORRA -->
            <xs:enumeration value="AO"/>
            <!-- ANGOLA -->
            <xs:enumeration value="AI"/>
            <!-- ANGUILLA -->
            <xs:enumeration value="AQ"/>
            <!-- ANTARCTICA -->
            <xs:enumeration value="AG"/>
            <!-- ANTIGUA AND BARBUDA -->
            <xs:enumeration value="AR"/>
            <!-- ARGENTINA -->
            <xs:enumeration value="AM"/>
            <!-- ARMENIA -->
            <xs:enumeration value="AW"/>
            <!-- ARUBA -->
            <xs:enumeration value="AU"/>
            <!-- AUSTRALIA -->
            <xs:enumeration value="AT"/>
            <!-- AUSTRIA -->
            <xs:enumeration value="AZ"/>
            <!-- AZERBAIJAN -->
            <xs:enumeration value="BS"/>
            <!-- BAHAMAS -->
            <xs:enumeration value="BH"/>
            <!-- BAHRAIN -->
            <xs:enumeration value="BD"/>
            <!-- BANGLADESH -->
            <xs:enumeration value="BB"/>
            <!-- BARBADOS -->
            <xs:enumeration value="BY"/>
            <!-- BELARUS -->
            <xs:enumeration value="BE"/>
            <!-- BELGIUM -->
            <xs:enumeration value="BZ"/>
            <!-- BELIZE -->
            <xs:enumeration value="BJ"/>
            <!-- BENIN -->
            <xs:enumeration value="BM"/>
            <!-- BERMUDA -->
            <xs:enumeration value="BT"/>
            <!-- BHUTAN -->
            <xs:enumeration value="BO"/>
            <!-- BOLIVIA -->
            <xs:enumeration value="BA"/>
            <!-- BOSNIA AND HERZEGOVINA -->
            <xs:enumeration value="BW"/>
            <!-- BOTSWANA -->
            <xs:enumeration value="BV"/>
            <!-- BOUVET ISLAND -->
            <xs:enumeration value="BR"/>
            <!-- BRAZIL -->
            <xs:enumeration value="IO"/>
            <!-- BRITISH INDIAN OCEAN TERRITORY -->
            <xs:enumeration value="BN"/>
            <!-- BRUNEI DARUSSALAM -->
            <xs:enumeration value="BG"/>
            <!-- BULGARIA -->
            <xs:enumeration value="BF"/>
            <!-- BURKINA FASO -->
            <xs:enumeration value="BI"/>
            <!-- BURUNDI -->
            <xs:enumeration value="KH"/>
            <!-- CAMBODIA -->
            <xs:enumeration value="CM"/>
            <!-- CAMEROON -->
            <xs:enumeration value="CA"/>
            <!-- CANADA -->
            <xs:enumeration value="CV"/>
            <!-- CAPE VERDE -->
            <xs:enumeration value="KY"/>
            <!-- CAYMAN ISLANDS -->
            <xs:enumeration value="CF"/>
            <!-- CENTRAL AFRICAN REPUBLIC -->
            <xs:enumeration value="TD"/>
            <!-- CHAD -->
            <xs:enumeration value="CL"/>
            <!-- CHILE -->
            <xs:enumeration value="CN"/>
            <!-- CHINA -->
            <xs:enumeration value="CX"/>
            <!-- CHRISTMAS ISLAND -->
            <xs:enumeration value="CC"/>
            <!-- COCOS (KEELING) ISLANDS -->
            <xs:enumeration value="CO"/>
            <!-- COLOMBIA -->
            <xs:enumeration value="KM"/>
            <!-- COMOROS -->
            <xs:enumeration value="CG"/>
            <!-- CONGO -->
            <xs:enumeration value="CD"/>
            <!-- CONGO, THE DEMOCRATIC REPUBLIC OF THE -->
            <xs:enumeration value="CK"/>
            <!-- COOK ISLANDS -->
            <xs:enumeration value="CR"/>
            <!-- COSTA RICA -->
            <xs:enumeration value="CI"/>
            <!-- COTE D'IVOIRE -->
            <xs:enumeration value="HR"/>
            <!-- CROATIA -->
            <xs:enumeration value="CU"/>
            <!-- CUBA -->
            <xs:enumeration value="CY"/>
            <!-- CYPRUS -->
            <xs:enumeration value="CZ"/>
            <!-- CZECH REPUBLIC -->
            <xs:enumeration value="DK"/>
            <!-- DENMARK -->
            <xs:enumeration value="DJ"/>
            <!-- DJIBOUTI -->
            <xs:enumeration value="DM"/>
            <!-- DOMINICA -->
            <xs:enumeration value="DO"/>
            <!-- DOMINICAN REPUBLIC -->
            <xs:enumeration value="EC"/>
            <!-- ECUADOR -->
            <xs:enumeration value="EG"/>
            <!-- EGYPT -->
            <xs:enumeration value="SV"/>
            <!-- EL SALVADOR -->
            <xs:enumeration value="GQ"/>
            <!-- EQUATORIAL GUINEA -->
            <xs:enumeration value="ER"/>
            <!-- ERITREA -->
            <xs:enumeration value="EE"/>
            <!-- ESTONIA -->
            <xs:enumeration value="ET"/>
            <!-- ETHIOPIA -->
            <xs:enumeration value="FK"/>
            <!-- FALKLAND ISLANDS (MALVINAS) -->
            <xs:enumeration value="FO"/>
            <!-- FAROE ISLANDS -->
            <xs:enumeration value="FJ"/>
            <!-- FIJI -->
            <xs:enumeration value="FI"/>
            <!-- FINLAND -->
            <xs:enumeration value="FR"/>
            <!-- FRANCE -->
            <xs:enumeration value="GF"/>
            <!-- FRENCH GUIANA -->
            <xs:enumeration value="PF"/>
            <!-- FRENCH POLYNESIA -->
            <xs:enumeration value="TF"/>
            <!-- FRENCH SOUTHERN TERRITORIES -->
            <xs:enumeration value="GA"/>
            <!-- GABON -->
            <xs:enumeration value="GM"/>
            <!-- GAMBIA -->
            <xs:enumeration value="GE"/>
            <!-- GEORGIA -->
            <xs:enumeration value="DE"/>
            <!-- GERMANY -->
            <xs:enumeration value="GH"/>
            <!-- GHANA -->
            <xs:enumeration value="GI"/>
            <!-- GIBRALTAR -->
            <xs:enumeration value="GR"/>
            <!-- GREECE -->
            <xs:enumeration value="GL"/>
            <!-- GREENLAND -->
            <xs:enumeration value="GD"/>
            <!-- GRENADA -->
            <xs:enumeration value="GP"/>
            <!-- GUADELOUPE -->
            <xs:enumeration value="GU"/>
            <!-- GUAM -->
            <xs:enumeration value="GT"/>
            <!-- GUATEMALA -->
            <xs:enumeration value="GG"/>
            <!-- GUERNSEY -->
            <xs:enumeration value="GN"/>
            <!-- GUINEA -->
            <xs:enumeration value="GW"/>
            <!-- GUINEA-BISSAU -->
            <xs:enumeration value="GY"/>
            <!-- GUYANA -->
            <xs:enumeration value="HT"/>
            <!-- HAITI -->
            <xs:enumeration value="HM"/>
            <!-- HEARD ISLAND AND MCDONALD ISLANDS -->
            <xs:enumeration value="VA"/>
            <!-- HOLY SEE (VATICAN CITY STATE) -->
            <xs:enumeration value="HN"/>
            <!-- HONDURAS -->
            <xs:enumeration value="HK"/>
            <!-- HONG KONG -->
            <xs:enumeration value="HU"/>
            <!-- HUNGARY -->
            <xs:enumeration value="IS"/>
            <!-- ICELAND -->
            <xs:enumeration value="IN"/>
            <!-- INDIA -->
            <xs:enumeration value="ID"/>
            <!-- INDONESIA -->
            <xs:enumeration value="IR"/>
            <!-- IRAN, ISLAMIC REPUBLIC OF -->
            <xs:enumeration value="IQ"/>
            <!-- IRAQ -->
            <xs:enumeration value="IE"/>
            <!-- IRELAND -->
            <xs:enumeration value="IM"/>
            <!-- ISLE OF MAN -->
            <xs:enumeration value="IL"/>
            <!-- ISRAEL -->
            <xs:enumeration value="IT"/>
            <!-- ITALY -->
            <xs:enumeration value="JM"/>
            <!-- JAMAICA -->
            <xs:enumeration value="JP"/>
            <!-- JAPAN -->
            <xs:enumeration value="JE"/>
            <!-- JERSEY -->
            <xs:enumeration value="JO"/>
            <!-- JORDAN -->
            <xs:enumeration value="KZ"/>
            <!-- KAZAKHSTAN -->
            <xs:enumeration value="KE"/>
            <!-- KENYA -->
            <xs:enumeration value="KI"/>
            <!-- KIRIBATI -->
            <xs:enumeration value="KP"/>
            <!-- KOREA, DEMOCRATIC PEOPLE'S REPUBLIC OF -->
            <xs:enumeration value="KR"/>
            <!-- KOREA, REPUBLIC OF -->
            <xs:enumeration value="KW"/>
            <!-- KUWAIT -->
            <xs:enumeration value="KG"/>
            <!-- KYRGYZSTAN -->
            <xs:enumeration value="LA"/>
            <!-- LAO PEOPLE'S DEMOCRATIC REPUBLIC -->
            <xs:enumeration value="LV"/>
            <!-- LATVIA -->
            <xs:enumeration value="LB"/>
            <!-- LEBANON -->
            <xs:enumeration value="LS"/>
            <!-- LESOTHO -->
            <xs:enumeration value="LR"/>
            <!-- LIBERIA -->
            <xs:enumeration value="LY"/>
            <!-- LIBYAN ARAB JAMAHIRIYA -->
            <xs:enumeration value="LI"/>
            <!-- LIECHTENSTEIN -->
            <xs:enumeration value="LT"/>
            <!-- LITHUANIA -->
            <xs:enumeration value="LU"/>
            <!-- LUXEMBOURG -->
            <xs:enumeration value="MO"/>
            <!-- MACAO -->
            <xs:enumeration value="MK"/>
            <!-- MACEDONIA, THE FORMER YUGOSLAV REPUBLIC OF -->
            <xs:enumeration value="MG"/>
            <!-- MADAGASCAR -->
            <xs:enumeration value="MW"/>
            <!-- MALAWI -->
            <xs:enumeration value="MY"/>
            <!-- MALAYSIA -->
            <xs:enumeration value="MV"/>
            <!-- MALDIVES -->
            <xs:enumeration value="ML"/>
            <!-- MALI -->
            <xs:enumeration value="MT"/>
            <!-- MALTA -->
            <xs:enumeration value="MH"/>
            <!-- MARSHALL ISLANDS -->
            <xs:enumeration value="MQ"/>
            <!-- MARTINIQUE -->
            <xs:enumeration value="MR"/>
            <!-- MAURITANIA -->
            <xs:enumeration value="MU"/>
            <!-- MAURITIUS -->
            <xs:enumeration value="YT"/>
            <!-- MAYOTTE -->
            <xs:enumeration value="MX"/>
            <!-- MEXICO -->
            <xs:enumeration value="FM"/>
            <!-- MICRONESIA, FEDERATED STATES OF -->
            <xs:enumeration value="MD"/>
            <!-- MOLDOVA, REPUBLIC OF -->
            <xs:enumeration value="MC"/>
            <!-- MONACO -->
            <xs:enumeration value="MN"/>
            <!-- MONGOLIA -->
            <xs:enumeration value="MS"/>
            <!-- MONTSERRAT -->
            <xs:enumeration value="MA"/>
            <!-- MOROCCO -->
            <xs:enumeration value="MZ"/>
            <!-- MOZAMBIQUE -->
            <xs:enumeration value="MM"/>
            <!-- MYANMAR -->
            <xs:enumeration value="NA"/>
            <!-- NAMIBIA -->
            <xs:enumeration value="NR"/>
            <!-- NAURU -->
            <xs:enumeration value="NP"/>
            <!-- NEPAL -->
            <xs:enumeration value="NL"/>
            <!-- NETHERLANDS -->
            <xs:enumeration value="AN"/>
            <!-- NETHERLANDS ANTILLES -->
            <xs:enumeration value="NC"/>
            <!-- NEW CALEDONIA -->
            <xs:enumeration value="NZ"/>
            <!-- NEW ZEALAND -->
            <xs:enumeration value="NI"/>
            <!-- NICARAGUA -->
            <xs:enumeration value="NE"/>
            <!-- NIGER -->
            <xs:enumeration value="NG"/>
            <!-- NIGERIA -->
            <xs:enumeration value="NU"/>
            <!-- NIUE -->
            <xs:enumeration value="NF"/>
            <!-- NORFOLK ISLAND -->
            <xs:enumeration value="MP"/>
            <!-- NORTHERN MARIANA ISLANDS -->
            <xs:enumeration value="NO"/>
            <!-- NORWAY -->
            <xs:enumeration value="OM"/>
            <!-- OMAN -->
            <xs:enumeration value="PK"/>
            <!-- PAKISTAN -->
            <xs:enumeration value="PW"/>
            <!-- PALAU -->
            <xs:enumeration value="PS"/>
            <!-- PALESTINIAN TERRITORY, OCCUPIED -->
            <xs:enumeration value="PA"/>
            <!-- PANAMA -->
            <xs:enumeration value="PG"/>
            <!-- PAPUA NEW GUINEA -->
            <xs:enumeration value="PY"/>
            <!-- PARAGUAY -->
            <xs:enumeration value="PE"/>
            <!-- PERU -->
            <xs:enumeration value="PH"/>
            <!-- PHILIPPINES -->
            <xs:enumeration value="PN"/>
            <!-- PITCAIRN -->
            <xs:enumeration value="PL"/>
            <!-- POLAND -->
            <xs:enumeration value="PT"/>
            <!-- PORTUGAL -->
            <xs:enumeration value="PR"/>
            <!-- PUERTO RICO -->
            <xs:enumeration value="QA"/>
            <!-- QATAR -->
            <xs:enumeration value="RE"/>
            <!-- REUNION -->
            <xs:enumeration value="RO"/>
            <!-- ROMANIA -->
            <xs:enumeration value="RU"/>
            <!-- RUSSIAN FEDERATION -->
            <xs:enumeration value="RW"/>
            <!-- RWANDA -->
            <xs:enumeration value="SH"/>
            <!-- SAINT HELENA -->
            <xs:enumeration value="KN"/>
            <!-- SAINT KITTS AND NEVIS -->
            <xs:enumeration value="LC"/>
            <!-- SAINT LUCIA -->
            <xs:enumeration value="PM"/>
            <!-- SAINT PIERRE AND MIQUELON -->
            <xs:enumeration value="VC"/>
            <!-- SAINT VINCENT AND THE GRENADINES -->
            <xs:enumeration value="WS"/>
            <!-- SAMOA -->
            <xs:enumeration value="SM"/>
            <!-- SAN MARINO -->
            <xs:enumeration value="ST"/>
            <!-- SAO TOME AND PRINCIPE -->
            <xs:enumeration value="SA"/>
            <!-- SAUDI ARABIA -->
            <xs:enumeration value="SN"/>
            <!-- SENEGAL -->
            <xs:enumeration value="CS"/>
            <!-- SERBIA AND MONTENEGRO -->
            <xs:enumeration value="RS"/>
            <!-- SERBIA  -->
            <xs:enumeration value="SC"/>
            <!-- SEYCHELLES -->
            <xs:enumeration value="SL"/>
            <!-- SIERRA LEONE -->
            <xs:enumeration value="SG"/>
            <!-- SINGAPORE -->
            <xs:enumeration value="SK"/>
            <!-- SLOVAKIA -->
            <xs:enumeration value="SI"/>
            <!-- SLOVENIA -->
            <xs:enumeration value="SB"/>
            <!-- SOLOMON ISLANDS -->
            <xs:enumeration value="SO"/>
            <!-- SOMALIA -->
            <xs:enumeration value="ZA"/>
            <!-- SOUTH AFRICA -->
            <xs:enumeration value="GS"/>
            <!-- SOUTH GEORGIA AND THE SOUTH SANDWICH ISLANDS -->
            <xs:enumeration value="ES"/>
            <!-- SPAIN -->
            <xs:enumeration value="LK"/>
            <!-- SRI LANKA -->
            <xs:enumeration value="SD"/>
            <!-- SUDAN -->
            <xs:enumeration value="SR"/>
            <!-- SURINAME -->
            <xs:enumeration value="SJ"/>
            <!-- SVALBARD AND JAN MAYEN -->
            <xs:enumeration value="SZ"/>
            <!-- SWAZILAND -->
            <xs:enumeration value="SE"/>
            <!-- SWEDEN -->
            <xs:enumeration value="CH"/>
            <!-- SWITZERLAND -->
            <xs:enumeration value="SY"/>
            <!-- SYRIAN ARAB REPUBLIC -->
            <xs:enumeration value="TW"/>
            <!-- TAIWAN, PROVINCE OF CHINA -->
            <xs:enumeration value="TJ"/>
            <!-- TAJIKISTAN -->
            <xs:enumeration value="TZ"/>
            <!-- TANZANIA, UNITED REPUBLIC OF -->
            <xs:enumeration value="TH"/>
            <!-- THAILAND -->
            <xs:enumeration value="TL"/>
            <!-- TIMOR-LESTE -->
            <xs:enumeration value="TG"/>
            <!-- TOGO -->
            <xs:enumeration value="TK"/>
            <!-- TOKELAU -->
            <xs:enumeration value="TO"/>
            <!-- TONGA -->
            <xs:enumeration value="TT"/>
            <!-- TRINIDAD AND TOBAGO -->
            <xs:enumeration value="TN"/>
            <!-- TUNISIA -->
            <xs:enumeration value="TR"/>
            <!-- TURKEY -->
            <xs:enumeration value="TM"/>
            <!-- TURKMENISTAN -->
            <xs:enumeration value="TC"/>
            <!-- TURKS AND CAICOS ISLANDS -->
            <xs:enumeration value="TV"/>
            <!-- TUVALU -->
            <xs:enumeration value="UG"/>
            <!-- UGANDA -->
            <xs:enumeration value="UA"/>
            <!-- UKRAINE -->
            <xs:enumeration value="AE"/>
            <!-- UNITED ARAB EMIRATES -->
            <xs:enumeration value="GB"/>
            <!-- UNITED KINGDOM -->
            <xs:enumeration value="US"/>
            <!-- UNITED STATES -->
            <xs:enumeration value="UM"/>
            <!-- UNITED STATES MINOR OUTLYING ISLANDS -->
            <xs:enumeration value="UY"/>
            <!-- URUGUAY -->
            <xs:enumeration value="UZ"/>
            <!-- UZBEKISTAN -->
            <xs:enumeration value="VU"/>
            <!-- VANUATU -->
            <xs:enumeration value="VE"/>
            <!-- VENEZUELA -->
            <xs:enumeration value="VN"/>
            <!-- VIET NAM -->
            <xs:enumeration value="VG"/>
            <!-- VIRGIN ISLANDS, BRITISH -->
            <xs:enumeration value="VI"/>
            <!-- VIRGIN ISLANDS, U.S. -->
            <xs:enumeration value="WF"/>
            <!-- WALLIS AND FUTUNA -->
            <xs:enumeration value="EH"/>
            <!-- WESTERN SAHARA -->
            <xs:enumeration value="YE"/>
            <!-- YEMEN -->
            <xs:enumeration value="ZM"/>
            <!-- ZAMBIA -->
            <xs:enumeration value="ZW"/>
            <!-- ZIMBABWE -->
            <xs:enumeration value="BL"/>
            <!-- Saint Barthelemy -->
            <xs:enumeration value="BQ"/>
            <!-- Bonaire, Sint Eustatius and Saba -->
            <xs:enumeration value="SS"/>
            <!-- South Sudan -->
            <xs:enumeration value="SX"/>
            <!-- Sint Maarten. Sint Maarten -->
            <xs:enumeration value="CW"/>
            <!-- Curacao -->
            <xs:enumeration value="ME"/>
            <!-- Montenegro -->
            <xs:enumeration value="MF"/>
            <!-- Saint Martin (French part) -->
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType name="language">
        <xs:annotation>
            <xs:documentation>
                A valid ISO 639-1, 639-2/B or 639-2/T code (except the reserved range qaa-qtz) or the string UNKNOWN.
            </xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
            <!-- AFAR -->
            <xs:enumeration value="aa"/>
            <xs:enumeration value="aar"/>
            <!-- ABKHAZIAN -->
            <xs:enumeration value="ab"/>
            <xs:enumeration value="abk"/>
            <!-- ACHINESE -->
            <xs:enumeration value="ace"/>
            <!-- ACOLI -->
            <xs:enumeration value="ach"/>
            <!-- ADANGME -->
            <xs:enumeration value="ada"/>
            <!-- ADYGHE -->
            <xs:enumeration value="ady"/>
            <!-- AFRIHILI -->
            <xs:enumeration value="afh"/>
            <!-- AFRIKAANS -->
            <xs:enumeration value="af"/>
            <xs:enumeration value="afr"/>
            <!-- AINU -->
            <xs:enumeration value="ain"/>
            <!-- AKAN -->
            <xs:enumeration value="ak"/>
            <xs:enumeration value="aka"/>
            <!-- AKKADIAN -->
            <xs:enumeration value="akk"/>
            <!-- ALEUT -->
            <xs:enumeration value="ale"/>
            <!-- SOUTHERN_ALTAI -->
            <xs:enumeration value="alt"/>
            <!-- AMHARIC -->
            <xs:enumeration value="am"/>
            <xs:enumeration value="amh"/>
            <!-- ENGLISH_OLD -->
            <xs:enumeration value="ang"/>
            <!-- ANGIKA -->
            <xs:enumeration value="anp"/>
            <!-- ARABIC -->
            <xs:enumeration value="ar"/>
            <xs:enumeration value="ara"/>
            <!-- OFFICIAL_ARAMAIC -->
            <xs:enumeration value="arc"/>
            <!-- ARAGONESE -->
            <xs:enumeration value="an"/>
            <xs:enumeration value="arg"/>
            <!-- MAPUDUNGUN -->
            <xs:enumeration value="arn"/>
            <!-- ARAPAHO -->
            <xs:enumeration value="arp"/>
            <!-- ARAWAK -->
            <xs:enumeration value="arw"/>
            <!-- ASSAMESE -->
            <xs:enumeration value="as"/>
            <xs:enumeration value="asm"/>
            <!-- ASTURIAN -->
            <xs:enumeration value="ast"/>
            <!-- AVARIC -->
            <xs:enumeration value="av"/>
            <xs:enumeration value="ava"/>
            <!-- AVESTAN -->
            <xs:enumeration value="ae"/>
            <xs:enumeration value="ave"/>
            <!-- AWADHI -->
            <xs:enumeration value="awa"/>
            <!-- AYMARA -->
            <xs:enumeration value="ay"/>
            <xs:enumeration value="aym"/>
            <!-- AZERBAIJANI -->
            <xs:enumeration value="az"/>
            <xs:enumeration value="aze"/>
            <!-- BASHKIR -->
            <xs:enumeration value="ba"/>
            <xs:enumeration value="bak"/>
            <!-- BALUCHI -->
            <xs:enumeration value="bal"/>
            <!-- BAMBARA -->
            <xs:enumeration value="bm"/>
            <xs:enumeration value="bam"/>
            <!-- BALINESE -->
            <xs:enumeration value="ban"/>
            <!-- BASA -->
            <xs:enumeration value="bas"/>
            <!-- BEJA -->
            <xs:enumeration value="bej"/>
            <!-- BELARUSIAN -->
            <xs:enumeration value="be"/>
            <xs:enumeration value="bel"/>
            <!-- BEMBA -->
            <xs:enumeration value="bem"/>
            <!-- BENGALI -->
            <xs:enumeration value="bn"/>
            <xs:enumeration value="ben"/>
            <!-- BHOJPURI -->
            <xs:enumeration value="bho"/>
            <!-- BIKOL -->
            <xs:enumeration value="bik"/>
            <!-- BINI -->
            <xs:enumeration value="bin"/>
            <!-- BISLAMA -->
            <xs:enumeration value="bi"/>
            <xs:enumeration value="bis"/>
            <!-- SIKSIKA -->
            <xs:enumeration value="bla"/>
            <!-- TIBETAN -->
            <xs:enumeration value="bo"/>
            <xs:enumeration value="bod"/>
            <xs:enumeration value="tib"/>
            <!-- BOSNIAN -->
            <xs:enumeration value="bs"/>
            <xs:enumeration value="bos"/>
            <!-- BRAJ -->
            <xs:enumeration value="bra"/>
            <!-- BRETON -->
            <xs:enumeration value="br"/>
            <xs:enumeration value="bre"/>
            <!-- BURIAT -->
            <xs:enumeration value="bua"/>
            <!-- BUGINESE -->
            <xs:enumeration value="bug"/>
            <!-- BULGARIAN -->
            <xs:enumeration value="bg"/>
            <xs:enumeration value="bul"/>
            <!-- BLIN -->
            <xs:enumeration value="byn"/>
            <!-- CADDO -->
            <xs:enumeration value="cad"/>
            <!-- GALIBI_CARIB -->
            <xs:enumeration value="car"/>
            <!-- CATALAN -->
            <xs:enumeration value="ca"/>
            <xs:enumeration value="cat"/>
            <!-- CEBUANO -->
            <xs:enumeration value="ceb"/>
            <!-- CZECH -->
            <xs:enumeration value="cs"/>
            <xs:enumeration value="ces"/>
            <xs:enumeration value="cze"/>
            <!-- CHAMORRO -->
            <xs:enumeration value="ch"/>
            <xs:enumeration value="cha"/>
            <!-- CHIBCHA -->
            <xs:enumeration value="chb"/>
            <!-- CHECHEN -->
            <xs:enumeration value="ce"/>
            <xs:enumeration value="che"/>
            <!-- CHAGATAI -->
            <xs:enumeration value="chg"/>
            <!-- CHUUKESE -->
            <xs:enumeration value="chk"/>
            <!-- MARI -->
            <xs:enumeration value="chm"/>
            <!-- CHINOOK_JARGON -->
            <xs:enumeration value="chn"/>
            <!-- CHOCTAW -->
            <xs:enumeration value="cho"/>
            <!-- CHIPEWYAN -->
            <xs:enumeration value="chp"/>
            <!-- CHEROKEE -->
            <xs:enumeration value="chr"/>
            <!-- CHURCH_SLAVIC -->
            <xs:enumeration value="cu"/>
            <xs:enumeration value="chu"/>
            <!-- CHUVASH -->
            <xs:enumeration value="cv"/>
            <xs:enumeration value="chv"/>
            <!-- CHEYENNE -->
            <xs:enumeration value="chy"/>
            <!-- MONTENEGRIN -->
            <xs:enumeration value="cnr"/>
            <!-- COPTIC -->
            <xs:enumeration value="cop"/>
            <!-- CORNISH -->
            <xs:enumeration value="kw"/>
            <xs:enumeration value="cor"/>
            <!-- CORSICAN -->
            <xs:enumeration value="co"/>
            <xs:enumeration value="cos"/>
            <!-- CREE -->
            <xs:enumeration value="cr"/>
            <xs:enumeration value="cre"/>
            <!-- CRIMEAN_TATAR -->
            <xs:enumeration value="crh"/>
            <!-- KASHUBIAN -->
            <xs:enumeration value="csb"/>
            <!-- WELSH -->
            <xs:enumeration value="cy"/>
            <xs:enumeration value="cym"/>
            <xs:enumeration value="wel"/>
            <!-- DAKOTA -->
            <xs:enumeration value="dak"/>
            <!-- DANISH -->
            <xs:enumeration value="da"/>
            <xs:enumeration value="dan"/>
            <!-- DARGWA -->
            <xs:enumeration value="dar"/>
            <!-- DELAWARE -->
            <xs:enumeration value="del"/>
            <!-- SLAVE -->
            <xs:enumeration value="den"/>
            <!-- GERMAN -->
            <xs:enumeration value="de"/>
            <xs:enumeration value="deu"/>
            <xs:enumeration value="ger"/>
            <!-- DOGRIB -->
            <xs:enumeration value="dgr"/>
            <!-- DINKA -->
            <xs:enumeration value="din"/>
            <!-- DIVEHI -->
            <xs:enumeration value="dv"/>
            <xs:enumeration value="div"/>
            <!-- DOGRI -->
            <xs:enumeration value="doi"/>
            <!-- LOWER_SORBIAN -->
            <xs:enumeration value="dsb"/>
            <!-- DUALA -->
            <xs:enumeration value="dua"/>
            <!-- DUTCH_MIDDLE -->
            <xs:enumeration value="dum"/>
            <!-- DYULA -->
            <xs:enumeration value="dyu"/>
            <!-- DZONGKHA -->
            <xs:enumeration value="dz"/>
            <xs:enumeration value="dzo"/>
            <!-- EFIK -->
            <xs:enumeration value="efi"/>
            <!-- EGYPTIAN_ANCIENT -->
            <xs:enumeration value="egy"/>
            <!-- EKAJUK -->
            <xs:enumeration value="eka"/>
            <!-- GREEK -->
            <xs:enumeration value="el"/>
            <xs:enumeration value="ell"/>
            <xs:enumeration value="gre"/>
            <!-- ELAMITE -->
            <xs:enumeration value="elx"/>
            <!-- ENGLISH -->
            <xs:enumeration value="en"/>
            <xs:enumeration value="eng"/>
            <!-- ENGLISH_MIDDLE -->
            <xs:enumeration value="enm"/>
            <!-- ESPERANTO -->
            <xs:enumeration value="eo"/>
            <xs:enumeration value="epo"/>
            <!-- ESTONIAN -->
            <xs:enumeration value="et"/>
            <xs:enumeration value="est"/>
            <!-- BASQUE -->
            <xs:enumeration value="eu"/>
            <xs:enumeration value="eus"/>
            <xs:enumeration value="baq"/>
            <!-- EWE -->
            <xs:enumeration value="ee"/>
            <xs:enumeration value="ewe"/>
            <!-- EWONDO -->
            <xs:enumeration value="ewo"/>
            <!-- FANG -->
            <xs:enumeration value="fan"/>
            <!-- FAROESE -->
            <xs:enumeration value="fo"/>
            <xs:enumeration value="fao"/>
            <!-- PERSIAN -->
            <xs:enumeration value="fa"/>
            <xs:enumeration value="fas"/>
            <xs:enumeration value="per"/>
            <!-- FANTI -->
            <xs:enumeration value="fat"/>
            <!-- FIJIAN -->
            <xs:enumeration value="fj"/>
            <xs:enumeration value="fij"/>
            <!-- FILIPINO -->
            <xs:enumeration value="fil"/>
            <!-- FINNISH -->
            <xs:enumeration value="fi"/>
            <xs:enumeration value="fin"/>
            <!-- FON -->
            <xs:enumeration value="fon"/>
            <!-- FRENCH -->
            <xs:enumeration value="fr"/>
            <xs:enumeration value="fra"/>
            <xs:enumeration value="fre"/>
            <!-- FRENCH_MIDDLE -->
            <xs:enumeration value="frm"/>
            <!-- FRENCH_OLD -->
            <xs:enumeration value="fro"/>
            <!-- NORTHERN_FRISIAN -->
            <xs:enumeration value="frr"/>
            <!-- EAST_FRISIAN_LOW_SAXON -->
            <xs:enumeration value="frs"/>
            <!-- WESTERN_FRISIAN -->
            <xs:enumeration value="fy"/>
            <xs:enumeration value="fry"/>
            <!-- FULAH -->
            <xs:enumeration value="ff"/>
            <xs:enumeration value="ful"/>
            <!-- FRIULIAN -->
            <xs:enumeration value="fur"/>
            <!-- GA -->
            <xs:enumeration value="gaa"/>
            <!-- GAYO -->
            <xs:enumeration value="gay"/>
            <!-- GBAYA -->
            <xs:enumeration value="gba"/>
            <!-- GEEZ -->
            <xs:enumeration value="gez"/>
            <!-- GILBERTESE -->
            <xs:enumeration value="gil"/>
            <!-- SCOTTISH -->
            <xs:enumeration value="gd"/>
            <xs:enumeration value="gla"/>
            <!-- IRISH -->
            <xs:enumeration value="ga"/>
            <xs:enumeration value="gle"/>
            <!-- GALICIAN -->
            <xs:enumeration value="gl"/>
            <xs:enumeration value="glg"/>
            <!-- MANX -->
            <xs:enumeration value="gv"/>
            <xs:enumeration value="glv"/>
            <!-- GERMAN_MIDDLE_HIGH -->
            <xs:enumeration value="gmh"/>
            <!-- GERMAN_OLD_HIGH -->
            <xs:enumeration value="goh"/>
            <!-- GONDI -->
            <xs:enumeration value="gon"/>
            <!-- GORONTALO -->
            <xs:enumeration value="gor"/>
            <!-- GOTHIC -->
            <xs:enumeration value="got"/>
            <!-- GREBO -->
            <xs:enumeration value="grb"/>
            <!-- GREEK_ANCIENT -->
            <xs:enumeration value="grc"/>
            <!-- GUARANI -->
            <xs:enumeration value="gn"/>
            <xs:enumeration value="grn"/>
            <!-- SWISS_GERMAN -->
            <xs:enumeration value="gsw"/>
            <!-- GUJARATI -->
            <xs:enumeration value="gu"/>
            <xs:enumeration value="guj"/>
            <!-- GWICH'IN -->
            <xs:enumeration value="gwi"/>
            <!-- HAIDA -->
            <xs:enumeration value="hai"/>
            <!-- HAITIAN -->
            <xs:enumeration value="ht"/>
            <xs:enumeration value="hat"/>
            <!-- HAUSA -->
            <xs:enumeration value="ha"/>
            <xs:enumeration value="hau"/>
            <!-- HAWAIIAN -->
            <xs:enumeration value="haw"/>
            <!-- HEBREW -->
            <xs:enumeration value="he"/>
            <xs:enumeration value="heb"/>
            <!-- HERERO -->
            <xs:enumeration value="hz"/>
            <xs:enumeration value="her"/>
            <!-- HILIGAYNON -->
            <xs:enumeration value="hil"/>
            <!-- HINDI -->
            <xs:enumeration value="hi"/>
            <xs:enumeration value="hin"/>
            <!-- HITTITE -->
            <xs:enumeration value="hit"/>
            <!-- HMONG -->
            <xs:enumeration value="hmn"/>
            <!-- HIRI_MOTU -->
            <xs:enumeration value="ho"/>
            <xs:enumeration value="hmo"/>
            <!-- CROATIAN -->
            <xs:enumeration value="hr"/>
            <xs:enumeration value="hrv"/>
            <!-- UPPER_SORBIAN -->
            <xs:enumeration value="hsb"/>
            <!-- HUNGARIAN -->
            <xs:enumeration value="hu"/>
            <xs:enumeration value="hun"/>
            <!-- HUPA -->
            <xs:enumeration value="hup"/>
            <!-- ARMENIAN -->
            <xs:enumeration value="hy"/>
            <xs:enumeration value="hye"/>
            <xs:enumeration value="arm"/>
            <!-- IBAN -->
            <xs:enumeration value="iba"/>
            <!-- IGBO -->
            <xs:enumeration value="ig"/>
            <xs:enumeration value="ibo"/>
            <!-- IDO -->
            <xs:enumeration value="io"/>
            <xs:enumeration value="ido"/>
            <!-- NUOSU -->
            <xs:enumeration value="ii"/>
            <xs:enumeration value="iii"/>
            <!-- INUKTITUT -->
            <xs:enumeration value="iu"/>
            <xs:enumeration value="iku"/>
            <!-- INTERLINGUE -->
            <xs:enumeration value="ie"/>
            <xs:enumeration value="ile"/>
            <!-- ILOKO -->
            <xs:enumeration value="ilo"/>
            <!-- INTERLINGUA -->
            <xs:enumeration value="ia"/>
            <xs:enumeration value="ina"/>
            <!-- INDONESIAN -->
            <xs:enumeration value="id"/>
            <xs:enumeration value="ind"/>
            <!-- INGUSH -->
            <xs:enumeration value="inh"/>
            <!-- INUPIAQ -->
            <xs:enumeration value="ik"/>
            <xs:enumeration value="ipk"/>
            <!-- ICELANDIC -->
            <xs:enumeration value="is"/>
            <xs:enumeration value="isl"/>
            <xs:enumeration value="ice"/>
            <!-- ITALIAN -->
            <xs:enumeration value="it"/>
            <xs:enumeration value="ita"/>
            <!-- JAVANESE -->
            <xs:enumeration value="jv"/>
            <xs:enumeration value="jav"/>
            <!-- LOJBAN -->
            <xs:enumeration value="jbo"/>
            <!-- JAPANESE -->
            <xs:enumeration value="ja"/>
            <xs:enumeration value="jpn"/>
            <!-- JUDEO-PERSIAN -->
            <xs:enumeration value="jpr"/>
            <!-- JUDEO-ARABIC -->
            <xs:enumeration value="jrb"/>
            <!-- KARA-KALPAK -->
            <xs:enumeration value="kaa"/>
            <!-- KABYLE -->
            <xs:enumeration value="kab"/>
            <!-- KACHIN -->
            <xs:enumeration value="kac"/>
            <!-- KALAALLISUT -->
            <xs:enumeration value="kl"/>
            <xs:enumeration value="kal"/>
            <!-- KAMBA -->
            <xs:enumeration value="kam"/>
            <!-- KANNADA -->
            <xs:enumeration value="kn"/>
            <xs:enumeration value="kan"/>
            <!-- KASHMIRI -->
            <xs:enumeration value="ks"/>
            <xs:enumeration value="kas"/>
            <!-- GEORGIAN -->
            <xs:enumeration value="ka"/>
            <xs:enumeration value="kat"/>
            <xs:enumeration value="geo"/>
            <!-- KANURI -->
            <xs:enumeration value="kr"/>
            <xs:enumeration value="kau"/>
            <!-- KAWI -->
            <xs:enumeration value="kaw"/>
            <!-- KAZAKH -->
            <xs:enumeration value="kk"/>
            <xs:enumeration value="kaz"/>
            <!-- KABARDIAN -->
            <xs:enumeration value="kbd"/>
            <!-- KHASI -->
            <xs:enumeration value="kha"/>
            <!-- CENTRAL_KHMER -->
            <xs:enumeration value="km"/>
            <xs:enumeration value="khm"/>
            <!-- KHOTANESE -->
            <xs:enumeration value="kho"/>
            <!-- KIKUYU -->
            <xs:enumeration value="ki"/>
            <xs:enumeration value="kik"/>
            <!-- KINYARWANDA -->
            <xs:enumeration value="rw"/>
            <xs:enumeration value="kin"/>
            <!-- KYRGYZ -->
            <xs:enumeration value="ky"/>
            <xs:enumeration value="kir"/>
            <!-- KIMBUNDU -->
            <xs:enumeration value="kmb"/>
            <!-- KONKANI -->
            <xs:enumeration value="kok"/>
            <!-- KOMI -->
            <xs:enumeration value="kv"/>
            <xs:enumeration value="kom"/>
            <!-- KONGO -->
            <xs:enumeration value="kg"/>
            <xs:enumeration value="kon"/>
            <!-- KOREAN -->
            <xs:enumeration value="ko"/>
            <xs:enumeration value="kor"/>
            <!-- KOSRAEAN -->
            <xs:enumeration value="kos"/>
            <!-- KPELLE -->
            <xs:enumeration value="kpe"/>
            <!-- KARACHAY-BALKAR -->
            <xs:enumeration value="krc"/>
            <!-- KARELIAN -->
            <xs:enumeration value="krl"/>
            <!-- KURUKH -->
            <xs:enumeration value="kru"/>
            <!-- KWANYAMA -->
            <xs:enumeration value="kj"/>
            <xs:enumeration value="kua"/>
            <!-- KUMYK -->
            <xs:enumeration value="kum"/>
            <!-- KURDISH -->
            <xs:enumeration value="ku"/>
            <xs:enumeration value="kur"/>
            <!-- KUTENAI -->
            <xs:enumeration value="kut"/>
            <!-- LADINO -->
            <xs:enumeration value="lad"/>
            <!-- LAHNDA -->
            <xs:enumeration value="lah"/>
            <!-- LAMBA -->
            <xs:enumeration value="lam"/>
            <!-- LAO -->
            <xs:enumeration value="lo"/>
            <xs:enumeration value="lao"/>
            <!-- LATIN -->
            <xs:enumeration value="la"/>
            <xs:enumeration value="lat"/>
            <!-- LATVIAN -->
            <xs:enumeration value="lv"/>
            <xs:enumeration value="lav"/>
            <!-- LEZGHIAN -->
            <xs:enumeration value="lez"/>
            <!-- LIMBURGISH -->
            <xs:enumeration value="li"/>
            <xs:enumeration value="lim"/>
            <!-- LINGALA -->
            <xs:enumeration value="ln"/>
            <xs:enumeration value="lin"/>
            <!-- LITHUANIAN -->
            <xs:enumeration value="lt"/>
            <xs:enumeration value="lit"/>
            <!-- MONGO -->
            <xs:enumeration value="lol"/>
            <!-- LOZI -->
            <xs:enumeration value="loz"/>
            <!-- LUXEMBOURGISH -->
            <xs:enumeration value="lb"/>
            <xs:enumeration value="ltz"/>
            <!-- LUBA-LULUA -->
            <xs:enumeration value="lua"/>
            <!-- LUBA-KATANGA -->
            <xs:enumeration value="lu"/>
            <xs:enumeration value="lub"/>
            <!-- GANDA -->
            <xs:enumeration value="lg"/>
            <xs:enumeration value="lug"/>
            <!-- LUISENO -->
            <xs:enumeration value="lui"/>
            <!-- LUNDA -->
            <xs:enumeration value="lun"/>
            <!-- LUO -->
            <xs:enumeration value="luo"/>
            <!-- LUSHAI -->
            <xs:enumeration value="lus"/>
            <!-- MADURESE -->
            <xs:enumeration value="mad"/>
            <!-- MAGAHI -->
            <xs:enumeration value="mag"/>
            <!-- MARSHALLESE -->
            <xs:enumeration value="mh"/>
            <xs:enumeration value="mah"/>
            <!-- MAITHILI -->
            <xs:enumeration value="mai"/>
            <!-- MAKASAR -->
            <xs:enumeration value="mak"/>
            <!-- MALAYALAM -->
            <xs:enumeration value="ml"/>
            <xs:enumeration value="mal"/>
            <!-- MANDINGO -->
            <xs:enumeration value="man"/>
            <!-- MARATHI -->
            <xs:enumeration value="mr"/>
            <xs:enumeration value="mar"/>
            <!-- MASAI -->
            <xs:enumeration value="mas"/>
            <!-- MOKSHA -->
            <xs:enumeration value="mdf"/>
            <!-- MANDAR -->
            <xs:enumeration value="mdr"/>
            <!-- MENDE -->
            <xs:enumeration value="men"/>
            <!-- IRISH_MIDDLE -->
            <xs:enumeration value="mga"/>
            <!-- MICMAC -->
            <xs:enumeration value="mic"/>
            <!-- MINANGKABAU -->
            <xs:enumeration value="min"/>
            <!-- UNCODED_LANGUAGES -->
            <xs:enumeration value="mis"/>
            <!-- MACEDONIAN -->
            <xs:enumeration value="mk"/>
            <xs:enumeration value="mkd"/>
            <xs:enumeration value="mac"/>
            <!-- MALAGASY -->
            <xs:enumeration value="mg"/>
            <xs:enumeration value="mlg"/>
            <!-- MALTESE -->
            <xs:enumeration value="mt"/>
            <xs:enumeration value="mlt"/>
            <!-- MANCHU -->
            <xs:enumeration value="mnc"/>
            <!-- MANIPURI -->
            <xs:enumeration value="mni"/>
            <!-- MOHAWK -->
            <xs:enumeration value="moh"/>
            <!-- MONGOLIAN -->
            <xs:enumeration value="mn"/>
            <xs:enumeration value="mon"/>
            <!-- MOSSI -->
            <xs:enumeration value="mos"/>
            <!-- MĀORI -->
            <xs:enumeration value="mi"/>
            <xs:enumeration value="mri"/>
            <xs:enumeration value="mao"/>
            <!-- MALAY -->
            <xs:enumeration value="ms"/>
            <xs:enumeration value="msa"/>
            <xs:enumeration value="may"/>
            <!-- MULTIPLE_LANGUAGES -->
            <xs:enumeration value="mul"/>
            <!-- CREEK -->
            <xs:enumeration value="mus"/>
            <!-- MIRANDESE -->
            <xs:enumeration value="mwl"/>
            <!-- MARWARI -->
            <xs:enumeration value="mwr"/>
            <!-- BURMESE -->
            <xs:enumeration value="my"/>
            <xs:enumeration value="mya"/>
            <xs:enumeration value="bur"/>
            <!-- ERZYA -->
            <xs:enumeration value="myv"/>
            <!-- NEAPOLITAN -->
            <xs:enumeration value="nap"/>
            <!-- NAURU -->
            <xs:enumeration value="na"/>
            <xs:enumeration value="nau"/>
            <!-- NAVAJO -->
            <xs:enumeration value="nv"/>
            <xs:enumeration value="nav"/>
            <!-- SOUTHERN_NDEBELE -->
            <xs:enumeration value="nr"/>
            <xs:enumeration value="nbl"/>
            <!-- NORTHERN_NDEBELE -->
            <xs:enumeration value="nd"/>
            <xs:enumeration value="nde"/>
            <!-- NDONGA -->
            <xs:enumeration value="ng"/>
            <xs:enumeration value="ndo"/>
            <!-- LOW_GERMAN -->
            <xs:enumeration value="nds"/>
            <!-- NEPALI -->
            <xs:enumeration value="ne"/>
            <xs:enumeration value="nep"/>
            <!-- NEPAL_BHASA_NEWARI -->
            <xs:enumeration value="new"/>
            <!-- NIAS -->
            <xs:enumeration value="nia"/>
            <!-- NIUEAN -->
            <xs:enumeration value="niu"/>
            <!-- DUTCH -->
            <xs:enumeration value="nl"/>
            <xs:enumeration value="nld"/>
            <xs:enumeration value="dut"/>
            <!-- NORWEGIAN_NYNORSK -->
            <xs:enumeration value="nn"/>
            <xs:enumeration value="nno"/>
            <!-- NORWEGIAN_BOKMÅL -->
            <xs:enumeration value="nb"/>
            <xs:enumeration value="nob"/>
            <!-- NOGAI -->
            <xs:enumeration value="nog"/>
            <!-- NORSE_OLD -->
            <xs:enumeration value="non"/>
            <!-- NORWEGIAN -->
            <xs:enumeration value="no"/>
            <xs:enumeration value="nor"/>
            <!-- N'KO -->
            <xs:enumeration value="nqo"/>
            <!-- PEDI -->
            <xs:enumeration value="nso"/>
            <!-- CLASSICAL_NEWARI -->
            <xs:enumeration value="nwc"/>
            <!-- CHICHEWA -->
            <xs:enumeration value="ny"/>
            <xs:enumeration value="nya"/>
            <!-- NYAMWEZI -->
            <xs:enumeration value="nym"/>
            <!-- NYANKOLE -->
            <xs:enumeration value="nyn"/>
            <!-- NYORO -->
            <xs:enumeration value="nyo"/>
            <!-- NZIMA -->
            <xs:enumeration value="nzi"/>
            <!-- OCCITAN -->
            <xs:enumeration value="oc"/>
            <xs:enumeration value="oci"/>
            <!-- OJIBWA -->
            <xs:enumeration value="oj"/>
            <xs:enumeration value="oji"/>
            <!-- ORIYA -->
            <xs:enumeration value="or"/>
            <xs:enumeration value="ori"/>
            <!-- OROMO -->
            <xs:enumeration value="om"/>
            <xs:enumeration value="orm"/>
            <!-- OSAGE -->
            <xs:enumeration value="osa"/>
            <!-- OSSETIAN -->
            <xs:enumeration value="os"/>
            <xs:enumeration value="oss"/>
            <!-- TURKISH_OTTOMAN -->
            <xs:enumeration value="ota"/>
            <!-- PANGASINAN -->
            <xs:enumeration value="pag"/>
            <!-- PAHLAVI -->
            <xs:enumeration value="pal"/>
            <!-- PAMPANGA -->
            <xs:enumeration value="pam"/>
            <!-- PANJABI -->
            <xs:enumeration value="pa"/>
            <xs:enumeration value="pan"/>
            <!-- PAPIAMENTO -->
            <xs:enumeration value="pap"/>
            <!-- PALAUAN -->
            <xs:enumeration value="pau"/>
            <!-- PERSIAN_OLD -->
            <xs:enumeration value="peo"/>
            <!-- PHOENICIAN -->
            <xs:enumeration value="phn"/>
            <!-- PALI -->
            <xs:enumeration value="pi"/>
            <xs:enumeration value="pli"/>
            <!-- POLISH -->
            <xs:enumeration value="pl"/>
            <xs:enumeration value="pol"/>
            <!-- POHNPEIAN -->
            <xs:enumeration value="pon"/>
            <!-- PORTUGUESE -->
            <xs:enumeration value="pt"/>
            <xs:enumeration value="por"/>
            <!-- PROVENÇAL_OLD -->
            <xs:enumeration value="pro"/>
            <!-- PASHTO -->
            <xs:enumeration value="ps"/>
            <xs:enumeration value="pus"/>
            <!-- QUECHUA -->
            <xs:enumeration value="qu"/>
            <xs:enumeration value="que"/>
            <!-- RAJASTHANI -->
            <xs:enumeration value="raj"/>
            <!-- RAPANUI -->
            <xs:enumeration value="rap"/>
            <!-- RAROTONGAN -->
            <xs:enumeration value="rar"/>
            <!-- ROMANSH -->
            <xs:enumeration value="rm"/>
            <xs:enumeration value="roh"/>
            <!-- ROMANY -->
            <xs:enumeration value="rom"/>
            <!-- ROMANIAN -->
            <xs:enumeration value="ro"/>
            <xs:enumeration value="ron"/>
            <xs:enumeration value="rum"/>
            <!-- RUNDI -->
            <xs:enumeration value="rn"/>
            <xs:enumeration value="run"/>
            <!-- AROMANIAN -->
            <xs:enumeration value="rup"/>
            <!-- RUSSIAN -->
            <xs:enumeration value="ru"/>
            <xs:enumeration value="rus"/>
            <!-- SANDAWE -->
            <xs:enumeration value="sad"/>
            <!-- SANGO -->
            <xs:enumeration value="sg"/>
            <xs:enumeration value="sag"/>
            <!-- YAKUT -->
            <xs:enumeration value="sah"/>
            <!-- SAMARITAN_ARAMAIC -->
            <xs:enumeration value="sam"/>
            <!-- SANSKRIT -->
            <xs:enumeration value="sa"/>
            <xs:enumeration value="san"/>
            <!-- SASAK -->
            <xs:enumeration value="sas"/>
            <!-- SANTALI -->
            <xs:enumeration value="sat"/>
            <!-- SICILIAN -->
            <xs:enumeration value="scn"/>
            <!-- SCOTS -->
            <xs:enumeration value="sco"/>
            <!-- SELKUP -->
            <xs:enumeration value="sel"/>
            <!-- IRISH_OLD -->
            <xs:enumeration value="sga"/>
            <!-- SHAN -->
            <xs:enumeration value="shn"/>
            <!-- SIDAMO -->
            <xs:enumeration value="sid"/>
            <!-- SINHALA -->
            <xs:enumeration value="si"/>
            <xs:enumeration value="sin"/>
            <!-- SLOVAK -->
            <xs:enumeration value="sk"/>
            <xs:enumeration value="slk"/>
            <xs:enumeration value="slo"/>
            <!-- SLOVENIAN -->
            <xs:enumeration value="sl"/>
            <xs:enumeration value="slv"/>
            <!-- SOUTHERN_SAMI -->
            <xs:enumeration value="sma"/>
            <!-- NORTHERN_SAMI -->
            <xs:enumeration value="se"/>
            <xs:enumeration value="sme"/>
            <!-- LULE_SAMI -->
            <xs:enumeration value="smj"/>
            <!-- INARI_SAMI -->
            <xs:enumeration value="smn"/>
            <!-- SAMOAN -->
            <xs:enumeration value="sm"/>
            <xs:enumeration value="smo"/>
            <!-- SKOLT_SAMI -->
            <xs:enumeration value="sms"/>
            <!-- SHONA -->
            <xs:enumeration value="sn"/>
            <xs:enumeration value="sna"/>
            <!-- SINDHI -->
            <xs:enumeration value="sd"/>
            <xs:enumeration value="snd"/>
            <!-- SONINKE -->
            <xs:enumeration value="snk"/>
            <!-- SOGDIAN -->
            <xs:enumeration value="sog"/>
            <!-- SOMALI -->
            <xs:enumeration value="so"/>
            <xs:enumeration value="som"/>
            <!-- SOUTHERN_SOTHO -->
            <xs:enumeration value="st"/>
            <xs:enumeration value="sot"/>
            <!-- SPANISH -->
            <xs:enumeration value="es"/>
            <xs:enumeration value="spa"/>
            <!-- ALBANIAN -->
            <xs:enumeration value="sq"/>
            <xs:enumeration value="sqi"/>
            <xs:enumeration value="alb"/>
            <!-- SARDINIAN -->
            <xs:enumeration value="sc"/>
            <xs:enumeration value="srd"/>
            <!-- SRANAN_TONGO -->
            <xs:enumeration value="srn"/>
            <!-- SERBIAN -->
            <xs:enumeration value="sr"/>
            <xs:enumeration value="srp"/>
            <!-- SERER -->
            <xs:enumeration value="srr"/>
            <!-- SWATI -->
            <xs:enumeration value="ss"/>
            <xs:enumeration value="ssw"/>
            <!-- SUKUMA -->
            <xs:enumeration value="suk"/>
            <!-- SUNDANESE -->
            <xs:enumeration value="su"/>
            <xs:enumeration value="sun"/>
            <!-- SUSU -->
            <xs:enumeration value="sus"/>
            <!-- SUMERIAN -->
            <xs:enumeration value="sux"/>
            <!-- SWAHILI -->
            <xs:enumeration value="sw"/>
            <xs:enumeration value="swa"/>
            <!-- SWEDISH -->
            <xs:enumeration value="sv"/>
            <xs:enumeration value="swe"/>
            <!-- CLASSICAL_SYRIAC -->
            <xs:enumeration value="syc"/>
            <!-- SYRIAC -->
            <xs:enumeration value="syr"/>
            <!-- TAHITIAN -->
            <xs:enumeration value="ty"/>
            <xs:enumeration value="tah"/>
            <!-- TAMIL -->
            <xs:enumeration value="ta"/>
            <xs:enumeration value="tam"/>
            <!-- TATAR -->
            <xs:enumeration value="tt"/>
            <xs:enumeration value="tat"/>
            <!-- TELUGU -->
            <xs:enumeration value="te"/>
            <xs:enumeration value="tel"/>
            <!-- TIMNE -->
            <xs:enumeration value="tem"/>
            <!-- TERENO -->
            <xs:enumeration value="ter"/>
            <!-- TETUM -->
            <xs:enumeration value="tet"/>
            <!-- TAJIK -->
            <xs:enumeration value="tg"/>
            <xs:enumeration value="tgk"/>
            <!-- TAGALOG -->
            <xs:enumeration value="tl"/>
            <xs:enumeration value="tgl"/>
            <!-- THAI -->
            <xs:enumeration value="th"/>
            <xs:enumeration value="tha"/>
            <!-- TIGRE -->
            <xs:enumeration value="tig"/>
            <!-- TIGRINYA -->
            <xs:enumeration value="ti"/>
            <xs:enumeration value="tir"/>
            <!-- TIV -->
            <xs:enumeration value="tiv"/>
            <!-- TOKELAU -->
            <xs:enumeration value="tkl"/>
            <!-- KLINGON -->
            <xs:enumeration value="tlh"/>
            <!-- TLINGIT -->
            <xs:enumeration value="tli"/>
            <!-- TAMASHEK -->
            <xs:enumeration value="tmh"/>
            <!-- TONGA_NYASA -->
            <xs:enumeration value="tog"/>
            <!-- TONGA_TONGA_ISLANDS -->
            <xs:enumeration value="to"/>
            <xs:enumeration value="ton"/>
            <!-- TOK_PISIN -->
            <xs:enumeration value="tpi"/>
            <!-- TSIMSHIAN -->
            <xs:enumeration value="tsi"/>
            <!-- TSWANA -->
            <xs:enumeration value="tn"/>
            <xs:enumeration value="tsn"/>
            <!-- TSONGA -->
            <xs:enumeration value="ts"/>
            <xs:enumeration value="tso"/>
            <!-- TURKMEN -->
            <xs:enumeration value="tk"/>
            <xs:enumeration value="tuk"/>
            <!-- TUMBUKA -->
            <xs:enumeration value="tum"/>
            <!-- TURKISH -->
            <xs:enumeration value="tr"/>
            <xs:enumeration value="tur"/>
            <!-- TUVALU -->
            <xs:enumeration value="tvl"/>
            <!-- TWI -->
            <xs:enumeration value="tw"/>
            <xs:enumeration value="twi"/>
            <!-- TUVINIAN -->
            <xs:enumeration value="tyv"/>
            <!-- UDMURT -->
            <xs:enumeration value="udm"/>
            <!-- UGARITIC -->
            <xs:enumeration value="uga"/>
            <!-- UYGHUR -->
            <xs:enumeration value="ug"/>
            <xs:enumeration value="uig"/>
            <!-- UKRAINIAN -->
            <xs:enumeration value="uk"/>
            <xs:enumeration value="ukr"/>
            <!-- UMBUNDU -->
            <xs:enumeration value="umb"/>
            <!-- UNDETERMINED -->
            <xs:enumeration value="und"/>
            <!-- URDU -->
            <xs:enumeration value="ur"/>
            <xs:enumeration value="urd"/>
            <!-- UZBEK -->
            <xs:enumeration value="uz"/>
            <xs:enumeration value="uzb"/>
            <!-- VAI -->
            <xs:enumeration value="vai"/>
            <!-- VENDA -->
            <xs:enumeration value="ve"/>
            <xs:enumeration value="ven"/>
            <!-- VIETNAMESE -->
            <xs:enumeration value="vi"/>
            <xs:enumeration value="vie"/>
            <!-- VOLAPÜK -->
            <xs:enumeration value="vo"/>
            <xs:enumeration value="vol"/>
            <!-- VOTIC -->
            <xs:enumeration value="vot"/>
            <!-- WOLAITTA -->
            <xs:enumeration value="wal"/>
            <!-- WARAY -->
            <xs:enumeration value="war"/>
            <!-- WASHO -->
            <xs:enumeration value="was"/>
            <!-- WALLOON -->
            <xs:enumeration value="wa"/>
            <xs:enumeration value="wln"/>
            <!-- WOLOF -->
            <xs:enumeration value="wo"/>
            <xs:enumeration value="wol"/>
            <!-- KALMYK -->
            <xs:enumeration value="xal"/>
            <!-- XHOSA -->
            <xs:enumeration value="xh"/>
            <xs:enumeration value="xho"/>
            <!-- YAO -->
            <xs:enumeration value="yao"/>
            <!-- YAPESE -->
            <xs:enumeration value="yap"/>
            <!-- YIDDISH -->
            <xs:enumeration value="yi"/>
            <xs:enumeration value="yid"/>
            <!-- YORUBA -->
            <xs:enumeration value="yo"/>
            <xs:enumeration value="yor"/>
            <!-- ZAPOTEC -->
            <xs:enumeration value="zap"/>
            <!-- BLISSYMBOLS -->
            <xs:enumeration value="zbl"/>
            <!-- ZENAGA -->
            <xs:enumeration value="zen"/>
            <!-- STANDARD_MOROCCAN_TAMAZIGHT -->
            <xs:enumeration value="zgh"/>
            <!-- ZHUANG -->
            <xs:enumeration value="za"/>
            <xs:enumeration value="zha"/>
            <!-- CHINESE -->
            <xs:enumeration value="zh"/>
            <xs:enumeration value="zho"/>
            <xs:enumeration value="chi"/>
            <!-- ZULU -->
            <xs:enumeration value="zu"/>
            <xs:enumeration value="zul"/>
            <!-- ZUNI -->
            <xs:enumeration value="zun"/>
            <!-- NO_LINGUISTIC_CONTENT -->
            <xs:enumeration value="zxx"/>
            <!-- ZAZA -->
            <xs:enumeration value="zza"/>
            <!-- UNKNOWN -->
            <xs:enumeration value="UNKNOWN"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:complexType name="collectionReferenceListType">
        <xs:annotation>
            <xs:documentation>References to the collections that this asset belongs to.
            </xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="collection" type="publish:collectionReferenceType"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="collectionReferenceType">
        <xs:annotation>
            <xs:documentation>Reference to the collection that this asset belongs to.</xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:element name="id" type="publish:idType">
                <xs:annotation>
                    <xs:documentation>The id of the collection that this asset belongs to.</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="sortOrder" minOccurs="0" type="xs:int">
                <xs:annotation>
                    <xs:documentation>The sort order of the asset in this collection.</xs:documentation>
                </xs:annotation>
            </xs:element>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="adminLabelListType">
        <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="label" type="publish:notNullString"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="linkedAssetListType">
        <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="linkedAsset" type="publish:linkedAssetType"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="linkedAssetType">
        <xs:sequence>
            <xs:element minOccurs="0" name="id" type="publish:idType">
                <xs:annotation>
                    <xs:documentation>Optional link id. If omitted, one will be generated.</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="type" type="publish:linkType"/>
            <xs:element name="assetId" type="publish:ouAwareRefType"/>
        </xs:sequence>
    </xs:complexType>
    <xs:simpleType name="linkType">
        <xs:restriction base="xs:string">
            <xs:enumeration value="trailer"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:complexType name="slugsListType">
        <xs:sequence>
            <xs:sequence maxOccurs="unbounded">
                <xs:element minOccurs="0" name="slug" type="publish:pathElementType"/>
            </xs:sequence>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="ouAwareRefType">
        <xs:annotation>
            <xs:documentation>Optional reference to an existing entity with CU or BU level defined. For CU level
                entities
                this value will be ignored.
            </xs:documentation>
        </xs:annotation>
        <xs:simpleContent>
            <xs:extension base="publish:idType">
                <xs:attribute name="ownedByCustomer" default="false" type="xs:boolean"/>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>
    <xs:simpleType name="shortStringType">
        <xs:restriction base="xs:string">
            <xs:minLength value="1"/>
            <xs:maxLength value="50"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:complexType name="cuePointListType">
        <xs:sequence>
            <xs:element maxOccurs="unbounded" name="cuePoint" type="publish:cuePointType"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="cuePointType">
        <xs:sequence>
            <xs:element minOccurs="0" name="descriptions" type="publish:cuePointDescriptionListType">
                <xs:annotation>
                    <xs:documentation>List of descriptions</xs:documentation>
                </xs:annotation>
            </xs:element>
        </xs:sequence>
        <xs:attribute name="type" type="publish:cuePointTypeType" use="required"/>
        <xs:attribute name="start" type="xs:duration" use="required"/>
        <xs:attribute name="end" type="xs:duration"/>
    </xs:complexType>
    <xs:complexType name="cuePointDescriptionListType">
        <xs:sequence minOccurs="0">
            <xs:element name="description" maxOccurs="unbounded" type="publish:cuePointDescriptionType"/>
        </xs:sequence>
        <xs:attribute name="defaultImageUri" type="xs:anyURI"/>
        <xs:attribute name="generateThumbnailUrl" type="xs:boolean" default="false">
            <xs:annotation>
                <xs:documentation>Nb! Thumbnails are supported for non-encrypted materials only. Urls might be generated
                    for encrypted materials in the presentation layer but they will not produce a working image.
                </xs:documentation>
            </xs:annotation>
        </xs:attribute>
    </xs:complexType>
    <xs:complexType name="cuePointDescriptionType">
        <xs:simpleContent>
            <xs:extension base="xs:string">
                <xs:attribute name="language" type="publish:language" use="required"/>
                <xs:attribute name="title" type="xs:string"/>
                <xs:attribute name="imageUri" type="xs:anyURI"/>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>
    <xs:simpleType name="cuePointTypeType">
        <xs:annotation>
            <xs:documentation>Controls the possible marker type</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
            <xs:enumeration value="POINT"/>
            <xs:enumeration value="INTRO"/>
            <xs:enumeration value="CHAPTER"/>
            <xs:enumeration value="CREDITS"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:complexType name="SpriteListType">
        <xs:sequence maxOccurs="unbounded">
            <xs:element name="sprite" type="publish:SpriteType"></xs:element>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="SpriteType">
        <xs:sequence maxOccurs="unbounded">
            <xs:element name="imageFileName" type="xs:string">
                <xs:annotation>
                    <xs:documentation>JPG file containing sprite image</xs:documentation>
                </xs:annotation>
            </xs:element>
        </xs:sequence>
        <xs:attribute name="width" type="xs:int" use="required">
            <xs:annotation>
                <xs:documentation>Width of sprite in pixels</xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute name="height" type="xs:int" use="required">
            <xs:annotation>
                <xs:documentation>Height of sprite in pixels</xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute name="vttFileName" type="xs:string" use="required">
            <xs:annotation>
                <xs:documentation>VTT file specifying sprite</xs:documentation>
            </xs:annotation>
        </xs:attribute>
    </xs:complexType>
</xs:schema>
